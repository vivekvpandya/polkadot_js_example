{"version":3,"file":"types.esm.js","sources":["../../../src/lib/transactions/types.ts"],"sourcesContent":["import type RpcError from '@polkadot/rpc-provider/coder/error'\nimport type { ISubmittableResult, RegistryError } from '@polkadot/types/types'\n\nexport type TransactionHooks = {\n  hooks?: {\n    inBlock?: (result: ISubmittableResult) => void\n    retracted?: () => void\n  }\n}\n\nexport type TransactionError =\n  | RpcError\n  | RegistryError\n  | RetractedError\n  | UnknownDispatchError\n\nexport class RetractedError extends Error {\n  constructor(message: string) {\n    super(message)\n    Object.setPrototypeOf(this, RetractedError.prototype)\n  }\n}\n\nexport class UnknownDispatchError extends Error {\n  constructor(message: string) {\n    super(message)\n    Object.setPrototypeOf(this, UnknownDispatchError.prototype)\n  }\n}\n\nexport const transactionErrorToString = (error: TransactionError) => {\n  return 'docs' in error\n    ? error.docs.join('. ')\n    : 'message' in error\n    ? error.message\n    : 'Unable to decode error.'\n}\n"],"names":[],"mappings":"AAgBM,MAAO,cAAe,SAAQ,KAAK,CAAA;AACvC,IAAA,WAAA,CAAY,OAAe,EAAA;QACzB,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,SAAS,CAAC,CAAA;KACtD;AACF,CAAA;AAEK,MAAO,oBAAqB,SAAQ,KAAK,CAAA;AAC7C,IAAA,WAAA,CAAY,OAAe,EAAA;QACzB,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAA;KAC5D;AACF,CAAA;AAEY,MAAA,wBAAwB,GAAG,CAAC,KAAuB,KAAI;IAClE,OAAO,MAAM,IAAI,KAAK;UAClB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;UACrB,SAAS,IAAI,KAAK;cAClB,KAAK,CAAC,OAAO;cACb,yBAAyB,CAAA;AAC/B;;;;"}