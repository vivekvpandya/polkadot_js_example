import type { ApiPromise } from '@polkadot/api';
import type { SubmittableExtrinsic } from '@polkadot/api/types';
import type { ISubmittableResult } from '@polkadot/types/types';
import * as Te from '@zeitgeistpm/utility/dist/taskeither';
import { KeyringPairOrExtSigner } from '../keyring';
import { TransactionError, TransactionHooks } from './types';
export declare const signAndSend: Te.TaskEither<TransactionError, ISubmittableResult, [
    {
        api: ApiPromise;
        tx: SubmittableExtrinsic<'promise', ISubmittableResult>;
        signer: KeyringPairOrExtSigner;
    } & TransactionHooks
]>;
//# sourceMappingURL=index.d.ts.map