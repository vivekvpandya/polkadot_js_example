import * as Te from '@zeitgeistpm/utility/dist/taskeither';
import { isExtSigner } from '../keyring/index.mjs';
import { UnknownDispatchError } from './types.mjs';

const signAndSend = Te.from(async ({ api, tx, signer, hooks }) => {
    return new Promise(async (resolve, reject) => {
        let unsub;
        const callback = async (result) => {
            if (result.status.isRetracted) {
                // TODO: find out if finalized callback will still be called. or if seperate error handling is needed.
                // https://substrate.stackexchange.com/questions/5961/does-callback-get-called-when-extrinsic-is-in-block-finalized-when-the-transacti
                hooks?.retracted?.();
            }
            if (result.dispatchError) {
                if (result.dispatchError.isModule) {
                    reject(api.registry.findMetaError(result.dispatchError.asModule));
                }
                else {
                    reject(new UnknownDispatchError(result.dispatchError.toString()));
                }
                unsub();
            }
            if (result.internalError) {
                reject(result.internalError);
                unsub();
            }
            if (result.status.isInBlock) {
                hooks?.inBlock?.(result);
            }
            if (result.status.isFinalized) {
                resolve(result);
            }
        };
        try {
            unsub = isExtSigner(signer)
                ? await tx.signAndSend(signer.address, { signer: signer.signer }, callback)
                : await tx.signAndSend(signer, callback);
        }
        catch (error) {
            reject(error);
        }
    });
});

export { signAndSend };
//# sourceMappingURL=index.mjs.map
