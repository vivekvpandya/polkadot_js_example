{"version":3,"file":"index.esm.js","sources":["../../../src/lib/transactions/index.ts"],"sourcesContent":["import type { ApiPromise } from '@polkadot/api'\nimport type { SubmittableExtrinsic } from '@polkadot/api/types'\nimport type { ISubmittableResult } from '@polkadot/types/types'\nimport * as Te from '@zeitgeistpm/utility/dist/taskeither'\nimport { isExtSigner, KeyringPairOrExtSigner } from '../keyring'\nimport {\n  RetractedError,\n  TransactionError,\n  TransactionHooks,\n  UnknownDispatchError,\n} from './types'\n\nexport const signAndSend: Te.TaskEither<\n  TransactionError,\n  ISubmittableResult,\n  [\n    {\n      api: ApiPromise\n      tx: SubmittableExtrinsic<'promise', ISubmittableResult>\n      signer: KeyringPairOrExtSigner\n    } & TransactionHooks,\n  ]\n> = Te.from(async ({ api, tx, signer, hooks }) => {\n  return new Promise(async (resolve, reject) => {\n    let unsub: () => void\n\n    const callback = async (result: ISubmittableResult) => {\n      if (result.status.isRetracted) {\n        // TODO: find out if finalized callback will still be called. or if seperate error handling is needed.\n        // https://substrate.stackexchange.com/questions/5961/does-callback-get-called-when-extrinsic-is-in-block-finalized-when-the-transacti\n        hooks?.retracted?.()\n      }\n\n      if (result.dispatchError) {\n        if (result.dispatchError.isModule) {\n          reject(api.registry.findMetaError(result.dispatchError.asModule))\n        } else {\n          reject(new UnknownDispatchError(result.dispatchError.toString()))\n        }\n        unsub()\n      }\n\n      if (result.internalError) {\n        reject(result.internalError)\n        unsub()\n      }\n\n      if (result.status.isInBlock) {\n        hooks?.inBlock?.(result)\n      }\n\n      if (result.status.isFinalized) {\n        resolve(result)\n      }\n    }\n\n    try {\n      unsub = isExtSigner(signer)\n        ? await tx.signAndSend(signer.address, { signer: signer.signer }, callback)\n        : await tx.signAndSend(signer, callback)\n    } catch (error) {\n      reject(error)\n    }\n  })\n})\n"],"names":[],"mappings":";;;;MAYa,WAAW,GAUpB,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,KAAI;IAC/C,OAAO,IAAI,OAAO,CAAC,OAAO,OAAO,EAAE,MAAM,KAAI;AAC3C,QAAA,IAAI,KAAiB,CAAA;AAErB,QAAA,MAAM,QAAQ,GAAG,OAAO,MAA0B,KAAI;AACpD,YAAA,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;;;AAG7B,gBAAA,KAAK,EAAE,SAAS,IAAI,CAAA;AACrB,aAAA;YAED,IAAI,MAAM,CAAC,aAAa,EAAE;AACxB,gBAAA,IAAI,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE;AACjC,oBAAA,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAA;AAClE,iBAAA;AAAM,qBAAA;AACL,oBAAA,MAAM,CAAC,IAAI,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;AAClE,iBAAA;AACD,gBAAA,KAAK,EAAE,CAAA;AACR,aAAA;YAED,IAAI,MAAM,CAAC,aAAa,EAAE;AACxB,gBAAA,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;AAC5B,gBAAA,KAAK,EAAE,CAAA;AACR,aAAA;AAED,YAAA,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;AAC3B,gBAAA,KAAK,EAAE,OAAO,GAAG,MAAM,CAAC,CAAA;AACzB,aAAA;AAED,YAAA,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;gBAC7B,OAAO,CAAC,MAAM,CAAC,CAAA;AAChB,aAAA;AACH,SAAC,CAAA;QAED,IAAI;AACF,YAAA,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;AACzB,kBAAE,MAAM,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,QAAQ,CAAC;kBACzE,MAAM,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AAC3C,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;YACd,MAAM,CAAC,KAAK,CAAC,CAAA;AACd,SAAA;AACH,KAAC,CAAC,CAAA;AACJ,CAAC;;;;"}