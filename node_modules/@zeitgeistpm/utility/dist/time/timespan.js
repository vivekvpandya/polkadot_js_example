'use strict';

var util = require('@polkadot/util');
var time = require('./time.js');

/**
 * Typeguard for BlockTimespan
 *
 * @param timespan Timespan
 * @returns timespan is BlockTimespan
 */
const isBlocks = (timespan) => util.isNumber(timespan.start) && util.isNumber(timespan.end);
/**
 * Typeguard for DateTimespan
 *
 * @param timespan Timespan
 * @returns timespan is DateTimespan
 */
const isDates = (timespan) => timespan.start instanceof Date && timespan.end instanceof Date;
function from(now, timespan) {
    return isDates(timespan) ? datesToBlocks(now, timespan) : blocksToDates(now, timespan);
}
/**
 * Convert timespan to blocks.
 *
 * @param ctx RpcContext
 * @param timespan Timespan
 * @returns Promise<BlockTimespan>
 */
const asBlocks = (now, timespan) => isDates(timespan) ? from(now, timespan) : timespan;
/**
 * Convert a timespan of dates to block range.
 *
 * @note Is approximate based on chain block production time and not exact.
 *
 * @param ctx RpcContext
 * @param dates DateTimespan
 * @returns Promise<BlockTimespan>
 */
const datesToBlocks = (now, dates) => {
    return {
        start: time.dateBlock(now, dates.start),
        end: time.dateBlock(now, dates.end),
    };
};
/**
 * Convert a timespan of dates to block range.
 *
 * @note Is approximate based on chain block production time and not exact.
 *
 * @param ctx RpcContext
 * @param dates DateTimespan
 * @returns Promise<BlockTimespan>
 */
const blocksToDates = (now, dates) => {
    return {
        start: time.blockDate(now, dates.start),
        end: time.blockDate(now, dates.end),
    };
};
/**
 * Get the duration of a timespan in milliseconds.
 *
 * @param time ChainTime
 * @param timeSpan Timespan
 * @returns number
 */
const toMs = (time, timeSpan) => {
    return isDates(timeSpan)
        ? timeSpan.end.getTime() - timeSpan.start.getTime()
        : (timeSpan.end - timeSpan.start) * time.period;
};

exports.asBlocks = asBlocks;
exports.blocksToDates = blocksToDates;
exports.datesToBlocks = datesToBlocks;
exports.from = from;
exports.isBlocks = isBlocks;
exports.isDates = isDates;
exports.toMs = toMs;
//# sourceMappingURL=timespan.js.map
