'use strict';

var util = require('@polkadot/util');
var ms = require('ms');
var duration = require('./duration.js');

/**
 * Get projected blocknumber of date.
 *
 * @param time ChainTime
 * @param date Date
 * @returns number
 */
const dateBlock = (time, date) => {
    const delta = date.getTime() - time.now;
    return Math.floor(time.block + delta / time.period);
};
/**
 * Get projected Date of blocknumber.
 *
 * @param time ChainTime
 * @param block number
 * @returns Date
 */
const blockDate = (time, block) => {
    const delta = block - time.block;
    return new Date(time.now + delta * time.period);
};
/**
 * Get instant as blocknumber.
 *
 * @param time ChainTime
 * @param instant Date | BlockNumber
 * @returns BlockNumber
 */
const asBlock = (time, instant) => util.isNumber(instant)
    ? instant
    : duration.isDuration(instant)
        ? dateBlock(time, new Date(Date.now() + ms(instant)))
        : dateBlock(time, instant);

exports.asBlock = asBlock;
exports.blockDate = blockDate;
exports.dateBlock = dateBlock;
//# sourceMappingURL=time.js.map
