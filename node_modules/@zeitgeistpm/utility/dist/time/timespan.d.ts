import { ChainTime } from './time';
/**
 * Union type of timespan dealing with blocknumbers or dates.
 */
export declare type Timespan = BlockTimespan | DateTimespan;
/**
 * A timespan represented as blocks
 */
export declare type BlockTimespan = {
    /**
     * The start block.
     */
    start: number;
    /**
     * The end block.
     */
    end: number;
};
/**
 * A timespan represented as dates.
 */
export declare type DateTimespan = {
    /**
     * Start date.
     */
    start: Date;
    /**
     * End Date.
     */
    end: Date;
};
/**
 * Typeguard for BlockTimespan
 *
 * @param timespan Timespan
 * @returns timespan is BlockTimespan
 */
export declare const isBlocks: (timespan: Timespan) => timespan is BlockTimespan;
/**
 * Typeguard for DateTimespan
 *
 * @param timespan Timespan
 * @returns timespan is DateTimespan
 */
export declare const isDates: (timespan: Timespan) => timespan is DateTimespan;
/**
 * Convert DateTimespan to BlockTimespan
 *
 * @param ctx RpcContext
 * @param timespan DateTimespan
 * @return Promise<BlockTimespan>
 */
export declare function from(now: ChainTime, timespan: DateTimespan): BlockTimespan;
/**
 * Convert BlockTimespan to DateTimespan
 *
 * @param ctx RpcContext
 * @param timespan BlockTimespan
 * @return Promise<DateTimespan>
 */
export declare function from(now: ChainTime, timespan: BlockTimespan): DateTimespan;
/**
 * Convert timespan to blocks.
 *
 * @param ctx RpcContext
 * @param timespan Timespan
 * @returns Promise<BlockTimespan>
 */
export declare const asBlocks: (now: ChainTime, timespan: Timespan) => BlockTimespan;
/**
 * Convert a timespan of dates to block range.
 *
 * @note Is approximate based on chain block production time and not exact.
 *
 * @param ctx RpcContext
 * @param dates DateTimespan
 * @returns Promise<BlockTimespan>
 */
export declare const datesToBlocks: (now: ChainTime, dates: DateTimespan) => BlockTimespan;
/**
 * Convert a timespan of dates to block range.
 *
 * @note Is approximate based on chain block production time and not exact.
 *
 * @param ctx RpcContext
 * @param dates DateTimespan
 * @returns Promise<BlockTimespan>
 */
export declare const blocksToDates: (now: ChainTime, dates: BlockTimespan) => DateTimespan;
/**
 * Get the duration of a timespan in milliseconds.
 *
 * @param time ChainTime
 * @param timeSpan Timespan
 * @returns number
 */
export declare const toMs: (time: ChainTime, timeSpan: Timespan) => number;
//# sourceMappingURL=timespan.d.ts.map