'use strict';

var index$1 = require('../error/index.js');
var index = require('../either/index.js');
var json = require('./impl/json.js');
var base64 = require('./impl/base64.js');

/**
 * Construct a Codec<I, O> from functions that either returns the encoded/decoded as a Right value
 * or throws an error that will result in a Left value
 *
 * @generic I - type of input
 * @generic O - type of output
 */
const codec = (config) => ({
    encode: data => index.either(index.tryCatch(() => config.encode(data))),
    decode: data => index.either(index.tryCatch(() => config.decode(data))),
});
/**
 * Compose two codecs.
 *
 * @generic I - original input
 * @generic IO - output of first codec, input for the second.
 * @generic O - output of last codec
 */
const compose = (codeca, codecb) => ({
    encode: data => codecb.encode(codeca.encode(data).unrightOr(index$1.throws)),
    decode: data => codeca.decode(codecb.decode(data).unrightOr(index$1.throws)),
});
/**
 *
 * Flip the encoding decoding of a codec.
 *
 * @generic I - type of input
 * @generic O - type of output
 */
const flip = (codec) => ({
    encode: data => codec.decode(data),
    decode: data => codec.encode(data),
});

exports.JsonCodec = json.JsonCodec;
exports.Base64Codec = base64.Base64Codec;
exports.codec = codec;
exports.compose = compose;
exports.flip = flip;
//# sourceMappingURL=index.js.map
