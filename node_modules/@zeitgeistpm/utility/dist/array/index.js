'use strict';

/**
 * Create a range.
 *
 * @param start number
 * @param end number
 * @returns number[]
 */
const range = (start, end) => [
    ...Array.from({ length: end - start }, (_, k) => k + start),
    end,
];
/**
 * Zip two arrays.
 *
 * @generic A - item type of fst placement array
 * @generic B - item type of snd placement array
 * @param as A[]
 * @param bs B[]
 * @returns [A, B][]
 */
const zip = (as, bs) => as.map((a, i) => [a, bs[i]]);
/**
 * Project every N item of an array based on a step.
 *
 * @generic A - item type of array
 * @param array A[]
 * @param step number
 * @returns A[]
 */
const project = (array, step) => {
    let acc = [];
    let curr = step;
    for (let i = 0; i < array.length; i++) {
        if (curr === step) {
            acc.push(array[i]);
            step = 0;
        }
        step++;
    }
    return acc;
};

exports.project = project;
exports.range = range;
exports.zip = zip;
//# sourceMappingURL=index.js.map
