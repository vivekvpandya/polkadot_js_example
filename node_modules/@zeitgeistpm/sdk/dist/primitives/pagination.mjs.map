{"version":3,"file":"pagination.mjs","sources":["../../src/primitives/pagination.ts"],"sourcesContent":["import { isNumber, isObject } from '@polkadot/util'\n\n/**\n * Pagination query parameters\n */\nexport type PaginationQuery = {\n  /**\n   * The index to start at.\n   */\n  offset: number\n  /**\n   * The number of items to fetch.\n   */\n  limit: number\n}\n\n/**\n * Typeguard for pagination query objects.\n *\n * @param query any\n * @returns query is PaginationQuery\n */\nexport const isPaginated = <T extends Record<any, any>>(\n  query: T,\n): query is PaginationQuery & T =>\n  Boolean(\n    query &&\n      isObject(query) &&\n      'offset' in query &&\n      'limit' in query &&\n      isNumber(query['offset']) &&\n      isNumber(query['limit']),\n  )\n"],"names":[],"mappings":";;AAgBA;;;;;AAKG;AACU,MAAA,WAAW,GAAG,CACzB,KAAQ,KAER,OAAO,CACL,KAAK;IACH,QAAQ,CAAC,KAAK,CAAC;AACf,IAAA,QAAQ,IAAI,KAAK;AACjB,IAAA,OAAO,IAAI,KAAK;AAChB,IAAA,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzB,IAAA,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;;;"}