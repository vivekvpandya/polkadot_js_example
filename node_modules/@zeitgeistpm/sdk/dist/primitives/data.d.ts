import type { Codec } from '@polkadot/types/types';
import { MetadataStorage } from '../meta';
import { FullContext, IndexerContext, RpcContext } from '../context';
export declare type Data<C extends RpcContext<MS> | IndexerContext | FullContext<MS>, R extends Codec, I extends IndexedData, MS extends MetadataStorage> = C extends IndexerContext ? I : R;
export declare type IndexedData = {
    __typename?: string;
    id: string;
};
export declare const isRpcData: <R extends Codec, I extends IndexedData>(object?: R | I | undefined) => object is R;
export declare const isIndexedData: <R extends Codec, I extends IndexedData>(object?: R | I | undefined) => object is I;
//# sourceMappingURL=data.d.ts.map