{"version":3,"file":"na.js","sources":["../../src/primitives/na.ts"],"sourcesContent":["import { isNotNull } from '@zeitgeistpm/utility/dist/null'\n\n/**\n * Type representing values that are not available.\n */\nexport type NA = {\n  __type: typeof sym\n  reason: string\n  toString: () => string\n}\n\n/**\n * Create a NA value.\n *\n * @param reason string\n * @returns NA\n */\nexport const na = (reason: string): NA => ({\n  __type: sym,\n  reason,\n  toString: () => `NA(${reason})`,\n})\n\nconst sym: unique symbol = Symbol()\n\n/**\n * Const symbold representing a not available value.\n */\nexport const NA: NA = na('Not available.')\n\n/**\n * Get the reason the value is not available.\n *\n * @param na NA\n * @returns string\n */\nexport const reasonOf = (na: NA) => na.reason\n\n/**\n * Typeguard for NA values.\n *\n * @param value unknown\n * @returns value is NA\n */\nexport const isNA = (value: unknown): value is NA =>\n  typeof value === 'object' &&\n  isNotNull(value) &&\n  '__type' in value &&\n  (value as any)['__type'] === sym\n\n/**\n * Typeguard to check if a value is available\n *\n * @param value T | NA\n * @returns value is T\n */\nexport const isAvailable = <T>(value: T | NA): value is T => !isNA(value)\n"],"names":["isNotNull"],"mappings":";;;;AAWA;;;;;AAKG;MACU,EAAE,GAAG,CAAC,MAAc,MAAU;AACzC,IAAA,MAAM,EAAE,GAAG;IACX,MAAM;AACN,IAAA,QAAQ,EAAE,MAAM,CAAA,GAAA,EAAM,MAAM,CAAG,CAAA,CAAA;AAChC,CAAA,EAAC;AAEF,MAAM,GAAG,GAAkB,MAAM,EAAE,CAAA;AAEnC;;AAEG;MACU,EAAE,GAAO,EAAE,CAAC,gBAAgB,EAAC;AAE1C;;;;;AAKG;AACI,MAAM,QAAQ,GAAG,CAAC,EAAM,KAAK,EAAE,CAAC,OAAM;AAE7C;;;;;AAKG;AACI,MAAM,IAAI,GAAG,CAAC,KAAc,KACjC,OAAO,KAAK,KAAK,QAAQ;IACzBA,eAAS,CAAC,KAAK,CAAC;AAChB,IAAA,QAAQ,IAAI,KAAK;AAChB,IAAA,KAAa,CAAC,QAAQ,CAAC,KAAK,IAAG;AAElC;;;;;AAKG;AACI,MAAM,WAAW,GAAG,CAAI,KAAa,KAAiB,CAAC,IAAI,CAAC,KAAK;;;;;;;;"}