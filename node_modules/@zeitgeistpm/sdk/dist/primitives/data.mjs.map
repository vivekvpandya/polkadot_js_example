{"version":3,"file":"data.mjs","sources":["../../src/primitives/data.ts"],"sourcesContent":["import type { Codec } from '@polkadot/types/types'\nimport { isCodec } from '@polkadot/util'\nimport { MetadataStorage } from '../meta'\nimport { FullContext, IndexerContext, RpcContext } from '../context'\n\nexport declare type Data<\n  C extends RpcContext<MS> | IndexerContext | FullContext<MS>,\n  R extends Codec,\n  I extends IndexedData,\n  MS extends MetadataStorage,\n> = C extends IndexerContext ? I : R\n\nexport type IndexedData = {\n  __typename?: string\n  id: string\n}\n\nexport const isRpcData = <R extends Codec, I extends IndexedData>(\n  object?: R | I,\n): object is R => Boolean(object && isCodec(object))\n\nexport const isIndexedData = <R extends Codec, I extends IndexedData>(\n  object?: R | I,\n): object is I => Boolean(object && !isRpcData(object))\n"],"names":[],"mappings":";;AAiBa,MAAA,SAAS,GAAG,CACvB,MAAc,KACE,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,EAAC;AAEvC,MAAA,aAAa,GAAG,CAC3B,MAAc,KACE,OAAO,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;;;;"}