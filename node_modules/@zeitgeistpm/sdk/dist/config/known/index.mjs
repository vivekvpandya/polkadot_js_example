import { ZeitgeistIpfs } from './storage.mjs';
export { ZeitgeistIpfs } from './storage.mjs';
import { SupportedParachain } from './types.mjs';
export { KnownPresets, SupportedParachain, isKnownPreset } from './types.mjs';

/**
 * Connect to the mainnet rpc and indexer
 * @returns KnownPreset<FullConfig>
 */
const mainnet = () => {
    return {
        provider: [rpcs.dwellir.uri, rpcs.zeitgeist.uri, rpcs.onfinality.uri],
        indexer: indexers.zeitgeist.uri,
        storage: ZeitgeistIpfs(),
    };
};
/**
 * Connect to the mainnet rpc only
 * @returns KnownPreset<RpcConfig>
 */
const mainnetRpc = () => {
    return {
        provider: [rpcs.dwellir.uri, rpcs.zeitgeist.uri, rpcs.onfinality.uri],
        storage: ZeitgeistIpfs(),
    };
};
/**
 * Connect to the mainnet indexer only.
 * @returns KnownPreset<IndexerConfig>
 */
const mainnetIndexer = () => {
    return {
        indexer: indexers.zeitgeist.uri,
    };
};
/**
 * Connect to the batterystation testnet rpc and indexer.
 * @returns KnownPreset<FullConfig>
 */
const batterystation = () => {
    return {
        provider: [rpcs.bsr.uri],
        indexer: indexers.bsr.uri,
        storage: ZeitgeistIpfs(),
    };
};
/**
 * Connect to the batterystation rpc only
 * @returns KnownPreset<RpcConfig>
 */
const batterystationRpc = () => {
    return {
        provider: [rpcs.bsr.uri],
        storage: ZeitgeistIpfs(),
    };
};
/**
 * Connect to the batterystation indexer only
 * @returns KnownPreset<IndexerConfig>
 */
const batterystationIndexer = () => {
    return {
        indexer: indexers.bsr.uri,
    };
};
/**
 * Known rpc endpoints.
 */
const rpcs = {
    zeitgeist: {
        uri: 'wss://rpc-0.zeitgeist.pm/',
        parachain: SupportedParachain.KUSAMA,
    },
    dwellir: {
        uri: 'wss://zeitgeist-rpc.dwellir.com/',
        parachain: SupportedParachain.KUSAMA,
    },
    onfinality: {
        uri: 'wss://zeitgeist.api.onfinality.io/public-ws',
        parachain: SupportedParachain.KUSAMA,
    },
    bsr: {
        uri: 'wss://bsr.zeitgeist.pm',
        parachain: SupportedParachain.BSR,
    },
    dev: {
        uri: 'ws://127.0.0.1:9944',
        parachain: SupportedParachain.LOCAL,
    },
};
/**
 * Known indexer endpoints.
 */
const indexers = {
    zeitgeist: {
        uri: 'https://processor.rpc-0.zeitgeist.pm/graphql',
        parachain: SupportedParachain.KUSAMA,
    },
    bsr: {
        uri: 'https://processor.bsr.zeitgeist.pm/graphql',
        parachain: SupportedParachain.BSR,
    },
    local: {
        uri: 'http://localhost:4350/graphql',
        parachain: SupportedParachain.LOCAL,
    },
};

export { batterystation, batterystationIndexer, batterystationRpc, indexers, mainnet, mainnetIndexer, mainnetRpc, rpcs };
//# sourceMappingURL=index.mjs.map
