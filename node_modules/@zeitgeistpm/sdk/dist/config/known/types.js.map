{"version":3,"file":"types.js","sources":["../../../src/config/known/types.ts"],"sourcesContent":["/**\n * Known preset types\n */\n\nimport { MetadataStorage } from '../../meta'\nimport { Config } from '../types'\n\nexport type KnownPreset<C extends Config<MS>, MS extends MetadataStorage> = C & {\n  preset: KnownPresets\n}\n\nexport const isKnownPreset = <C extends Config<MS>, MS extends MetadataStorage>(\n  config: Config<MS>,\n): config is KnownPreset<C, MS> => Boolean('preset' in config)\n\nexport enum KnownPresets {\n  mainnet = 'Mainnet',\n  mainnetRpc = 'Mainnet:rpc',\n  mainnetIndexer = 'Mainnet:indexer',\n  bsr = 'Batterystation',\n  bsrRpc = 'Batterystation:rpc',\n  bsrIndexer = 'Batterystation:indexer',\n}\n\nexport enum SupportedParachain {\n  KUSAMA = 'kusama',\n  ROCOCO = 'rococo',\n  BSR = 'bsr',\n  LOCAL = 'local',\n  UNKNOWN = 'unknown',\n}\n"],"names":["KnownPresets","SupportedParachain"],"mappings":";;AAAA;;AAEG;AASI,MAAM,aAAa,GAAG,CAC3B,MAAkB,KACe,OAAO,CAAC,QAAQ,IAAI,MAAM,EAAC;AAElDA,8BAOX;AAPD,CAAA,UAAY,YAAY,EAAA;AACtB,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,YAAA,CAAA,YAAA,CAAA,GAAA,aAA0B,CAAA;AAC1B,IAAA,YAAA,CAAA,gBAAA,CAAA,GAAA,iBAAkC,CAAA;AAClC,IAAA,YAAA,CAAA,KAAA,CAAA,GAAA,gBAAsB,CAAA;AACtB,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,oBAA6B,CAAA;AAC7B,IAAA,YAAA,CAAA,YAAA,CAAA,GAAA,wBAAqC,CAAA;AACvC,CAAC,EAPWA,oBAAY,KAAZA,oBAAY,GAOvB,EAAA,CAAA,CAAA,CAAA;AAEWC,oCAMX;AAND,CAAA,UAAY,kBAAkB,EAAA;AAC5B,IAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACX,IAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EANWA,0BAAkB,KAAlBA,0BAAkB,GAM7B,EAAA,CAAA,CAAA;;;;"}