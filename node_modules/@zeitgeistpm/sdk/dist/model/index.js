'use strict';

var index = require('./markets/index.js');
var index$1 = require('./swaps/index.js');
var index$2 = require('./time/index.js');
require('@polkadot/util');
require('@zeitgeistpm/rpc');
require('@zeitgeistpm/utility/dist/assert');
require('@zeitgeistpm/utility/dist/either');
require('@zeitgeistpm/utility/dist/error');
require('@zeitgeistpm/utility/dist/option');
require('@zeitgeistpm/utility/dist/taskeither');
require('@zeitgeistpm/utility/dist/time');
require('cids');
require('decimal.js');
require('rxjs');
require('rxjs/operators');
require('lodash-es');
require('../primitives/ztg.js');
require('../primitives/assetid.js');
require('../primitives/blocknumber.js');
require('../primitives/marketid.js');
require('@zeitgeistpm/utility/dist/null');
require('@zeitgeistpm/indexer');
require('@zeitgeistpm/utility/dist/array');
require('@zeitgeistpm/utility/dist/infinity');

/**
 * Create top level enriched zeitgeist models interface.
 *
 * @generic C - Context
 * @param ctx C
 * @returns Model<C>
 */
const model = (ctx) => {
    return {
        markets: index.model(ctx),
        swaps: index$1.model(ctx),
        time: index$2.model(ctx),
    };
};

exports.model = model;
//# sourceMappingURL=index.js.map
