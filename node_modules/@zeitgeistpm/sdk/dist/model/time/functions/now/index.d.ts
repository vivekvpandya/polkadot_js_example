import { ChainTime } from '@zeitgeistpm/utility/dist/time';
import { Observable } from 'rxjs';
import { RpcContext } from '../../../../context';
import { MetadataStorage } from '../../../../meta';
/**
 * Get current chain time.
 *
 * @param ctx RpcContext
 * @returns Promise<ChainTime>
 */
export declare const now: <MS extends MetadataStorage<{
    __meta: "markets";
    slug: string;
    description: string;
    question: string;
    tags?: string[] | undefined;
    confidentialId?: string | undefined;
    img?: string | undefined;
    scalarType?: "number" | "date" | undefined;
    categories?: {
        name: string;
        img?: string | undefined;
        ticker?: string | undefined;
        color?: string | undefined;
    }[] | undefined;
}, import("../../../../meta").CommentMetadata>>(ctx: RpcContext<MS>) => Promise<ChainTime>;
/**
 * Stream the current chain time pr block.
 *
 * @param ctx RpcContext
 * @returns Observable<ChainTime>
 */
export declare const now$: <MS extends MetadataStorage<{
    __meta: "markets";
    slug: string;
    description: string;
    question: string;
    tags?: string[] | undefined;
    confidentialId?: string | undefined;
    img?: string | undefined;
    scalarType?: "number" | "date" | undefined;
    categories?: {
        name: string;
        img?: string | undefined;
        ticker?: string | undefined;
        color?: string | undefined;
    }[] | undefined;
}, import("../../../../meta").CommentMetadata>>(ctx: RpcContext<MS>) => Observable<ChainTime>;
//# sourceMappingURL=index.d.ts.map