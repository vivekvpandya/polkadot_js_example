'use strict';

var rxjs = require('rxjs');

/**
 * Get current chain time.
 *
 * @param ctx RpcContext
 * @returns Promise<ChainTime>
 */
const now = async (ctx) => {
    const [now, head] = await Promise.all([
        ctx.api.query.timestamp.now().then(now => now.toNumber()),
        ctx.api.rpc.chain.getHeader(),
    ]);
    const block = head.number.toNumber();
    const period = ctx.api.consts.timestamp.minimumPeriod.toNumber() * 2;
    return {
        now,
        block,
        period,
    };
};
/**
 * Stream the current chain time pr block.
 *
 * @param ctx RpcContext
 * @returns Observable<ChainTime>
 */
const now$ = (ctx) => new rxjs.Observable(sub => {
    now(ctx).then(time => sub.next(time));
    const period = ctx.api.consts.timestamp.minimumPeriod.toNumber() * 2;
    const unsub = ctx.api.rpc.chain.subscribeFinalizedHeads(async (head) => {
        const now = await ctx.api.query.timestamp.now().then(now => now.toNumber());
        const block = head.number.toNumber();
        sub.next({
            now,
            block,
            period,
        });
    });
    return () => {
        unsub.then(unsub => unsub());
        sub.unsubscribe();
    };
});

exports.now = now;
exports.now$ = now$;
//# sourceMappingURL=index.js.map
