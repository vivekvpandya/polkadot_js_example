import { model as model$1 } from './markets/index.mjs';
import { model as model$2 } from './swaps/index.mjs';
import { model as model$3 } from './time/index.mjs';
import '@polkadot/util';
import '@zeitgeistpm/rpc';
import '@zeitgeistpm/utility/dist/assert';
import '@zeitgeistpm/utility/dist/either';
import '@zeitgeistpm/utility/dist/error';
import '@zeitgeistpm/utility/dist/option';
import '@zeitgeistpm/utility/dist/taskeither';
import '@zeitgeistpm/utility/dist/time';
import 'cids';
import 'decimal.js';
import 'rxjs';
import 'rxjs/operators';
import 'lodash-es';
import '../primitives/ztg.mjs';
import '../primitives/assetid.mjs';
import '../primitives/blocknumber.mjs';
import '../primitives/marketid.mjs';
import '@zeitgeistpm/utility/dist/null';
import '@zeitgeistpm/indexer';
import '@zeitgeistpm/utility/dist/array';
import '@zeitgeistpm/utility/dist/infinity';

/**
 * Create top level enriched zeitgeist models interface.
 *
 * @generic C - Context
 * @param ctx C
 * @returns Model<C>
 */
const model = (ctx) => {
    return {
        markets: model$1(ctx),
        swaps: model$2(ctx),
        time: model$3(ctx),
    };
};

export { model };
//# sourceMappingURL=index.mjs.map
