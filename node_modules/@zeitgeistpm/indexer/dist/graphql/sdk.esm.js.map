{"version":3,"file":"sdk.esm.js","sources":["../../src/graphql/sdk.ts"],"sourcesContent":["import { GraphQLClient } from 'graphql-request';\nimport * as Dom from 'graphql-request/dist/types.dom';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  BigInt: any;\n  DateTime: any;\n};\n\n/**\n * A type that has ss58 address format of the account. As soon as the chain\n * encounters any new address, they get registered here as user/pool/market account.\n */\nexport type Account = {\n  __typename?: 'Account';\n  /** Account address */\n  accountId: Scalars['String'];\n  /** Unique identifier of the object */\n  id: Scalars['String'];\n  /** Zeitgeist's identifier for market. Valid only for market account. */\n  marketId?: Maybe<Scalars['Int']>;\n  /** Zeitgeist's identifier for pool. Valid only for pool account. */\n  poolId?: Maybe<Scalars['Int']>;\n};\n\n/** Balance of a particular asset denoted by assetId present in the account */\nexport type AccountBalance = {\n  __typename?: 'AccountBalance';\n  /** Connected account */\n  account: Account;\n  /** Zeitgeist's identifier for asset */\n  assetId: Scalars['String'];\n  /** Balance of the asset */\n  balance: Scalars['BigInt'];\n  /** Unique identifier of the object */\n  id: Scalars['String'];\n};\n\nexport type AccountBalanceEdge = {\n  __typename?: 'AccountBalanceEdge';\n  cursor: Scalars['String'];\n  node: AccountBalance;\n};\n\nexport enum AccountBalanceOrderByInput {\n  AccountAccountIdAsc = 'account_accountId_ASC',\n  AccountAccountIdDesc = 'account_accountId_DESC',\n  AccountIdAsc = 'account_id_ASC',\n  AccountIdDesc = 'account_id_DESC',\n  AccountMarketIdAsc = 'account_marketId_ASC',\n  AccountMarketIdDesc = 'account_marketId_DESC',\n  AccountPoolIdAsc = 'account_poolId_ASC',\n  AccountPoolIdDesc = 'account_poolId_DESC',\n  AssetIdAsc = 'assetId_ASC',\n  AssetIdDesc = 'assetId_DESC',\n  BalanceAsc = 'balance_ASC',\n  BalanceDesc = 'balance_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC'\n}\n\nexport type AccountBalanceWhereInput = {\n  AND?: InputMaybe<Array<AccountBalanceWhereInput>>;\n  OR?: InputMaybe<Array<AccountBalanceWhereInput>>;\n  account?: InputMaybe<AccountWhereInput>;\n  account_isNull?: InputMaybe<Scalars['Boolean']>;\n  assetId_contains?: InputMaybe<Scalars['String']>;\n  assetId_containsInsensitive?: InputMaybe<Scalars['String']>;\n  assetId_endsWith?: InputMaybe<Scalars['String']>;\n  assetId_eq?: InputMaybe<Scalars['String']>;\n  assetId_gt?: InputMaybe<Scalars['String']>;\n  assetId_gte?: InputMaybe<Scalars['String']>;\n  assetId_in?: InputMaybe<Array<Scalars['String']>>;\n  assetId_isNull?: InputMaybe<Scalars['Boolean']>;\n  assetId_lt?: InputMaybe<Scalars['String']>;\n  assetId_lte?: InputMaybe<Scalars['String']>;\n  assetId_not_contains?: InputMaybe<Scalars['String']>;\n  assetId_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  assetId_not_endsWith?: InputMaybe<Scalars['String']>;\n  assetId_not_eq?: InputMaybe<Scalars['String']>;\n  assetId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  assetId_not_startsWith?: InputMaybe<Scalars['String']>;\n  assetId_startsWith?: InputMaybe<Scalars['String']>;\n  balance_eq?: InputMaybe<Scalars['BigInt']>;\n  balance_gt?: InputMaybe<Scalars['BigInt']>;\n  balance_gte?: InputMaybe<Scalars['BigInt']>;\n  balance_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  balance_isNull?: InputMaybe<Scalars['Boolean']>;\n  balance_lt?: InputMaybe<Scalars['BigInt']>;\n  balance_lte?: InputMaybe<Scalars['BigInt']>;\n  balance_not_eq?: InputMaybe<Scalars['BigInt']>;\n  balance_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n};\n\nexport type AccountBalancesConnection = {\n  __typename?: 'AccountBalancesConnection';\n  edges: Array<AccountBalanceEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type AccountEdge = {\n  __typename?: 'AccountEdge';\n  cursor: Scalars['String'];\n  node: Account;\n};\n\nexport enum AccountOrderByInput {\n  AccountIdAsc = 'accountId_ASC',\n  AccountIdDesc = 'accountId_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  MarketIdAsc = 'marketId_ASC',\n  MarketIdDesc = 'marketId_DESC',\n  PoolIdAsc = 'poolId_ASC',\n  PoolIdDesc = 'poolId_DESC'\n}\n\nexport type AccountWhereInput = {\n  AND?: InputMaybe<Array<AccountWhereInput>>;\n  OR?: InputMaybe<Array<AccountWhereInput>>;\n  accountId_contains?: InputMaybe<Scalars['String']>;\n  accountId_containsInsensitive?: InputMaybe<Scalars['String']>;\n  accountId_endsWith?: InputMaybe<Scalars['String']>;\n  accountId_eq?: InputMaybe<Scalars['String']>;\n  accountId_gt?: InputMaybe<Scalars['String']>;\n  accountId_gte?: InputMaybe<Scalars['String']>;\n  accountId_in?: InputMaybe<Array<Scalars['String']>>;\n  accountId_isNull?: InputMaybe<Scalars['Boolean']>;\n  accountId_lt?: InputMaybe<Scalars['String']>;\n  accountId_lte?: InputMaybe<Scalars['String']>;\n  accountId_not_contains?: InputMaybe<Scalars['String']>;\n  accountId_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  accountId_not_endsWith?: InputMaybe<Scalars['String']>;\n  accountId_not_eq?: InputMaybe<Scalars['String']>;\n  accountId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  accountId_not_startsWith?: InputMaybe<Scalars['String']>;\n  accountId_startsWith?: InputMaybe<Scalars['String']>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  marketId_eq?: InputMaybe<Scalars['Int']>;\n  marketId_gt?: InputMaybe<Scalars['Int']>;\n  marketId_gte?: InputMaybe<Scalars['Int']>;\n  marketId_in?: InputMaybe<Array<Scalars['Int']>>;\n  marketId_isNull?: InputMaybe<Scalars['Boolean']>;\n  marketId_lt?: InputMaybe<Scalars['Int']>;\n  marketId_lte?: InputMaybe<Scalars['Int']>;\n  marketId_not_eq?: InputMaybe<Scalars['Int']>;\n  marketId_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolId_eq?: InputMaybe<Scalars['Int']>;\n  poolId_gt?: InputMaybe<Scalars['Int']>;\n  poolId_gte?: InputMaybe<Scalars['Int']>;\n  poolId_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolId_isNull?: InputMaybe<Scalars['Boolean']>;\n  poolId_lt?: InputMaybe<Scalars['Int']>;\n  poolId_lte?: InputMaybe<Scalars['Int']>;\n  poolId_not_eq?: InputMaybe<Scalars['Int']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport type AccountsConnection = {\n  __typename?: 'AccountsConnection';\n  edges: Array<AccountEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\n/**\n * A type that has detail of the outcome asset. It is initialised as soon as the\n * market is created and price is assigned when pool is deployed for the market.\n */\nexport type Asset = {\n  __typename?: 'Asset';\n  /** Balance of the asset present in the pool account */\n  amountInPool?: Maybe<Scalars['BigInt']>;\n  /** Zeitgeist's identifier for asset */\n  assetId: Scalars['String'];\n  /** Unique identifier of the object */\n  id: Scalars['String'];\n  /** Zeitgeist's identifier for pool */\n  poolId?: Maybe<Scalars['Int']>;\n  /** Spot price of the asset in the pool */\n  price?: Maybe<Scalars['Float']>;\n};\n\nexport type AssetEdge = {\n  __typename?: 'AssetEdge';\n  cursor: Scalars['String'];\n  node: Asset;\n};\n\nexport enum AssetOrderByInput {\n  AmountInPoolAsc = 'amountInPool_ASC',\n  AmountInPoolDesc = 'amountInPool_DESC',\n  AssetIdAsc = 'assetId_ASC',\n  AssetIdDesc = 'assetId_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  PoolIdAsc = 'poolId_ASC',\n  PoolIdDesc = 'poolId_DESC',\n  PriceAsc = 'price_ASC',\n  PriceDesc = 'price_DESC'\n}\n\nexport type AssetWhereInput = {\n  AND?: InputMaybe<Array<AssetWhereInput>>;\n  OR?: InputMaybe<Array<AssetWhereInput>>;\n  amountInPool_eq?: InputMaybe<Scalars['BigInt']>;\n  amountInPool_gt?: InputMaybe<Scalars['BigInt']>;\n  amountInPool_gte?: InputMaybe<Scalars['BigInt']>;\n  amountInPool_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amountInPool_isNull?: InputMaybe<Scalars['Boolean']>;\n  amountInPool_lt?: InputMaybe<Scalars['BigInt']>;\n  amountInPool_lte?: InputMaybe<Scalars['BigInt']>;\n  amountInPool_not_eq?: InputMaybe<Scalars['BigInt']>;\n  amountInPool_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  assetId_contains?: InputMaybe<Scalars['String']>;\n  assetId_containsInsensitive?: InputMaybe<Scalars['String']>;\n  assetId_endsWith?: InputMaybe<Scalars['String']>;\n  assetId_eq?: InputMaybe<Scalars['String']>;\n  assetId_gt?: InputMaybe<Scalars['String']>;\n  assetId_gte?: InputMaybe<Scalars['String']>;\n  assetId_in?: InputMaybe<Array<Scalars['String']>>;\n  assetId_isNull?: InputMaybe<Scalars['Boolean']>;\n  assetId_lt?: InputMaybe<Scalars['String']>;\n  assetId_lte?: InputMaybe<Scalars['String']>;\n  assetId_not_contains?: InputMaybe<Scalars['String']>;\n  assetId_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  assetId_not_endsWith?: InputMaybe<Scalars['String']>;\n  assetId_not_eq?: InputMaybe<Scalars['String']>;\n  assetId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  assetId_not_startsWith?: InputMaybe<Scalars['String']>;\n  assetId_startsWith?: InputMaybe<Scalars['String']>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  poolId_eq?: InputMaybe<Scalars['Int']>;\n  poolId_gt?: InputMaybe<Scalars['Int']>;\n  poolId_gte?: InputMaybe<Scalars['Int']>;\n  poolId_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolId_isNull?: InputMaybe<Scalars['Boolean']>;\n  poolId_lt?: InputMaybe<Scalars['Int']>;\n  poolId_lte?: InputMaybe<Scalars['Int']>;\n  poolId_not_eq?: InputMaybe<Scalars['Int']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  price_eq?: InputMaybe<Scalars['Float']>;\n  price_gt?: InputMaybe<Scalars['Float']>;\n  price_gte?: InputMaybe<Scalars['Float']>;\n  price_in?: InputMaybe<Array<Scalars['Float']>>;\n  price_isNull?: InputMaybe<Scalars['Boolean']>;\n  price_lt?: InputMaybe<Scalars['Float']>;\n  price_lte?: InputMaybe<Scalars['Float']>;\n  price_not_eq?: InputMaybe<Scalars['Float']>;\n  price_not_in?: InputMaybe<Array<Scalars['Float']>>;\n};\n\nexport type AssetsConnection = {\n  __typename?: 'AssetsConnection';\n  edges: Array<AssetEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\n/** Market's share details */\nexport type CategoryMetadata = {\n  __typename?: 'CategoryMetadata';\n  /** Color identifier */\n  color?: Maybe<Scalars['String']>;\n  /** Image identifier */\n  img?: Maybe<Scalars['String']>;\n  /** Title ex. `Locomotiv will not be defeated` */\n  name?: Maybe<Scalars['String']>;\n  /** Short abbreviation ex. `LMDRAW` */\n  ticker?: Maybe<Scalars['String']>;\n};\n\n/**\n * Balance history of a particular asset in an account. Records all transactions\n * associated with the account.\n */\nexport type HistoricalAccountBalance = {\n  __typename?: 'HistoricalAccountBalance';\n  /** Account address */\n  accountId: Scalars['String'];\n  /** Zeitgeist's identifier for asset */\n  assetId: Scalars['String'];\n  /** Balance of the asset */\n  balance: Scalars['BigInt'];\n  /** Height of the block */\n  blockNumber: Scalars['Int'];\n  /** Balance difference */\n  dBalance: Scalars['BigInt'];\n  /** Event method which initiated this change */\n  event: Scalars['String'];\n  /** Unique identifier of the object */\n  id: Scalars['String'];\n  /** Timestamp of the block */\n  timestamp: Scalars['DateTime'];\n};\n\nexport type HistoricalAccountBalanceEdge = {\n  __typename?: 'HistoricalAccountBalanceEdge';\n  cursor: Scalars['String'];\n  node: HistoricalAccountBalance;\n};\n\nexport enum HistoricalAccountBalanceOrderByInput {\n  AccountIdAsc = 'accountId_ASC',\n  AccountIdDesc = 'accountId_DESC',\n  AssetIdAsc = 'assetId_ASC',\n  AssetIdDesc = 'assetId_DESC',\n  BalanceAsc = 'balance_ASC',\n  BalanceDesc = 'balance_DESC',\n  BlockNumberAsc = 'blockNumber_ASC',\n  BlockNumberDesc = 'blockNumber_DESC',\n  DBalanceAsc = 'dBalance_ASC',\n  DBalanceDesc = 'dBalance_DESC',\n  EventAsc = 'event_ASC',\n  EventDesc = 'event_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  TimestampAsc = 'timestamp_ASC',\n  TimestampDesc = 'timestamp_DESC'\n}\n\nexport type HistoricalAccountBalanceWhereInput = {\n  AND?: InputMaybe<Array<HistoricalAccountBalanceWhereInput>>;\n  OR?: InputMaybe<Array<HistoricalAccountBalanceWhereInput>>;\n  accountId_contains?: InputMaybe<Scalars['String']>;\n  accountId_containsInsensitive?: InputMaybe<Scalars['String']>;\n  accountId_endsWith?: InputMaybe<Scalars['String']>;\n  accountId_eq?: InputMaybe<Scalars['String']>;\n  accountId_gt?: InputMaybe<Scalars['String']>;\n  accountId_gte?: InputMaybe<Scalars['String']>;\n  accountId_in?: InputMaybe<Array<Scalars['String']>>;\n  accountId_isNull?: InputMaybe<Scalars['Boolean']>;\n  accountId_lt?: InputMaybe<Scalars['String']>;\n  accountId_lte?: InputMaybe<Scalars['String']>;\n  accountId_not_contains?: InputMaybe<Scalars['String']>;\n  accountId_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  accountId_not_endsWith?: InputMaybe<Scalars['String']>;\n  accountId_not_eq?: InputMaybe<Scalars['String']>;\n  accountId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  accountId_not_startsWith?: InputMaybe<Scalars['String']>;\n  accountId_startsWith?: InputMaybe<Scalars['String']>;\n  assetId_contains?: InputMaybe<Scalars['String']>;\n  assetId_containsInsensitive?: InputMaybe<Scalars['String']>;\n  assetId_endsWith?: InputMaybe<Scalars['String']>;\n  assetId_eq?: InputMaybe<Scalars['String']>;\n  assetId_gt?: InputMaybe<Scalars['String']>;\n  assetId_gte?: InputMaybe<Scalars['String']>;\n  assetId_in?: InputMaybe<Array<Scalars['String']>>;\n  assetId_isNull?: InputMaybe<Scalars['Boolean']>;\n  assetId_lt?: InputMaybe<Scalars['String']>;\n  assetId_lte?: InputMaybe<Scalars['String']>;\n  assetId_not_contains?: InputMaybe<Scalars['String']>;\n  assetId_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  assetId_not_endsWith?: InputMaybe<Scalars['String']>;\n  assetId_not_eq?: InputMaybe<Scalars['String']>;\n  assetId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  assetId_not_startsWith?: InputMaybe<Scalars['String']>;\n  assetId_startsWith?: InputMaybe<Scalars['String']>;\n  balance_eq?: InputMaybe<Scalars['BigInt']>;\n  balance_gt?: InputMaybe<Scalars['BigInt']>;\n  balance_gte?: InputMaybe<Scalars['BigInt']>;\n  balance_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  balance_isNull?: InputMaybe<Scalars['Boolean']>;\n  balance_lt?: InputMaybe<Scalars['BigInt']>;\n  balance_lte?: InputMaybe<Scalars['BigInt']>;\n  balance_not_eq?: InputMaybe<Scalars['BigInt']>;\n  balance_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  blockNumber_eq?: InputMaybe<Scalars['Int']>;\n  blockNumber_gt?: InputMaybe<Scalars['Int']>;\n  blockNumber_gte?: InputMaybe<Scalars['Int']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_lt?: InputMaybe<Scalars['Int']>;\n  blockNumber_lte?: InputMaybe<Scalars['Int']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  dBalance_eq?: InputMaybe<Scalars['BigInt']>;\n  dBalance_gt?: InputMaybe<Scalars['BigInt']>;\n  dBalance_gte?: InputMaybe<Scalars['BigInt']>;\n  dBalance_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dBalance_isNull?: InputMaybe<Scalars['Boolean']>;\n  dBalance_lt?: InputMaybe<Scalars['BigInt']>;\n  dBalance_lte?: InputMaybe<Scalars['BigInt']>;\n  dBalance_not_eq?: InputMaybe<Scalars['BigInt']>;\n  dBalance_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  event_contains?: InputMaybe<Scalars['String']>;\n  event_containsInsensitive?: InputMaybe<Scalars['String']>;\n  event_endsWith?: InputMaybe<Scalars['String']>;\n  event_eq?: InputMaybe<Scalars['String']>;\n  event_gt?: InputMaybe<Scalars['String']>;\n  event_gte?: InputMaybe<Scalars['String']>;\n  event_in?: InputMaybe<Array<Scalars['String']>>;\n  event_isNull?: InputMaybe<Scalars['Boolean']>;\n  event_lt?: InputMaybe<Scalars['String']>;\n  event_lte?: InputMaybe<Scalars['String']>;\n  event_not_contains?: InputMaybe<Scalars['String']>;\n  event_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  event_not_endsWith?: InputMaybe<Scalars['String']>;\n  event_not_eq?: InputMaybe<Scalars['String']>;\n  event_not_in?: InputMaybe<Array<Scalars['String']>>;\n  event_not_startsWith?: InputMaybe<Scalars['String']>;\n  event_startsWith?: InputMaybe<Scalars['String']>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  timestamp_eq?: InputMaybe<Scalars['DateTime']>;\n  timestamp_gt?: InputMaybe<Scalars['DateTime']>;\n  timestamp_gte?: InputMaybe<Scalars['DateTime']>;\n  timestamp_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  timestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  timestamp_lt?: InputMaybe<Scalars['DateTime']>;\n  timestamp_lte?: InputMaybe<Scalars['DateTime']>;\n  timestamp_not_eq?: InputMaybe<Scalars['DateTime']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n};\n\nexport type HistoricalAccountBalancesConnection = {\n  __typename?: 'HistoricalAccountBalancesConnection';\n  edges: Array<HistoricalAccountBalanceEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\n/**\n * A type that records the price history of an outcome asset and\n * trade history of an account\n */\nexport type HistoricalAsset = {\n  __typename?: 'HistoricalAsset';\n  /** Account which executed the trade */\n  accountId?: Maybe<Scalars['String']>;\n  /** Zeitgeist's identifier for asset */\n  assetId: Scalars['String'];\n  /** Height of the block */\n  blockNumber: Scalars['Int'];\n  /** Units of asset user bought (-ve) or sold (+ve) */\n  dAmountInPool?: Maybe<Scalars['BigInt']>;\n  /** Price of the asset has decreased if -ve and +ve if increased */\n  dPrice?: Maybe<Scalars['Float']>;\n  /** Event method which initiated this change */\n  event: Scalars['String'];\n  /** Unique identifier of the object */\n  id: Scalars['String'];\n  /** Units of asset present in the pool account */\n  newAmountInPool?: Maybe<Scalars['BigInt']>;\n  /** Price of the asset after trade execution/market resolution */\n  newPrice?: Maybe<Scalars['Float']>;\n  /** Timestamp of the block */\n  timestamp: Scalars['DateTime'];\n  /** Amount of ZTG which user spent/redeemed for swap trade */\n  ztgTraded?: Maybe<Scalars['BigInt']>;\n};\n\nexport type HistoricalAssetEdge = {\n  __typename?: 'HistoricalAssetEdge';\n  cursor: Scalars['String'];\n  node: HistoricalAsset;\n};\n\nexport enum HistoricalAssetOrderByInput {\n  AccountIdAsc = 'accountId_ASC',\n  AccountIdDesc = 'accountId_DESC',\n  AssetIdAsc = 'assetId_ASC',\n  AssetIdDesc = 'assetId_DESC',\n  BlockNumberAsc = 'blockNumber_ASC',\n  BlockNumberDesc = 'blockNumber_DESC',\n  DAmountInPoolAsc = 'dAmountInPool_ASC',\n  DAmountInPoolDesc = 'dAmountInPool_DESC',\n  DPriceAsc = 'dPrice_ASC',\n  DPriceDesc = 'dPrice_DESC',\n  EventAsc = 'event_ASC',\n  EventDesc = 'event_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  NewAmountInPoolAsc = 'newAmountInPool_ASC',\n  NewAmountInPoolDesc = 'newAmountInPool_DESC',\n  NewPriceAsc = 'newPrice_ASC',\n  NewPriceDesc = 'newPrice_DESC',\n  TimestampAsc = 'timestamp_ASC',\n  TimestampDesc = 'timestamp_DESC',\n  ZtgTradedAsc = 'ztgTraded_ASC',\n  ZtgTradedDesc = 'ztgTraded_DESC'\n}\n\nexport type HistoricalAssetWhereInput = {\n  AND?: InputMaybe<Array<HistoricalAssetWhereInput>>;\n  OR?: InputMaybe<Array<HistoricalAssetWhereInput>>;\n  accountId_contains?: InputMaybe<Scalars['String']>;\n  accountId_containsInsensitive?: InputMaybe<Scalars['String']>;\n  accountId_endsWith?: InputMaybe<Scalars['String']>;\n  accountId_eq?: InputMaybe<Scalars['String']>;\n  accountId_gt?: InputMaybe<Scalars['String']>;\n  accountId_gte?: InputMaybe<Scalars['String']>;\n  accountId_in?: InputMaybe<Array<Scalars['String']>>;\n  accountId_isNull?: InputMaybe<Scalars['Boolean']>;\n  accountId_lt?: InputMaybe<Scalars['String']>;\n  accountId_lte?: InputMaybe<Scalars['String']>;\n  accountId_not_contains?: InputMaybe<Scalars['String']>;\n  accountId_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  accountId_not_endsWith?: InputMaybe<Scalars['String']>;\n  accountId_not_eq?: InputMaybe<Scalars['String']>;\n  accountId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  accountId_not_startsWith?: InputMaybe<Scalars['String']>;\n  accountId_startsWith?: InputMaybe<Scalars['String']>;\n  assetId_contains?: InputMaybe<Scalars['String']>;\n  assetId_containsInsensitive?: InputMaybe<Scalars['String']>;\n  assetId_endsWith?: InputMaybe<Scalars['String']>;\n  assetId_eq?: InputMaybe<Scalars['String']>;\n  assetId_gt?: InputMaybe<Scalars['String']>;\n  assetId_gte?: InputMaybe<Scalars['String']>;\n  assetId_in?: InputMaybe<Array<Scalars['String']>>;\n  assetId_isNull?: InputMaybe<Scalars['Boolean']>;\n  assetId_lt?: InputMaybe<Scalars['String']>;\n  assetId_lte?: InputMaybe<Scalars['String']>;\n  assetId_not_contains?: InputMaybe<Scalars['String']>;\n  assetId_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  assetId_not_endsWith?: InputMaybe<Scalars['String']>;\n  assetId_not_eq?: InputMaybe<Scalars['String']>;\n  assetId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  assetId_not_startsWith?: InputMaybe<Scalars['String']>;\n  assetId_startsWith?: InputMaybe<Scalars['String']>;\n  blockNumber_eq?: InputMaybe<Scalars['Int']>;\n  blockNumber_gt?: InputMaybe<Scalars['Int']>;\n  blockNumber_gte?: InputMaybe<Scalars['Int']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_lt?: InputMaybe<Scalars['Int']>;\n  blockNumber_lte?: InputMaybe<Scalars['Int']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  dAmountInPool_eq?: InputMaybe<Scalars['BigInt']>;\n  dAmountInPool_gt?: InputMaybe<Scalars['BigInt']>;\n  dAmountInPool_gte?: InputMaybe<Scalars['BigInt']>;\n  dAmountInPool_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dAmountInPool_isNull?: InputMaybe<Scalars['Boolean']>;\n  dAmountInPool_lt?: InputMaybe<Scalars['BigInt']>;\n  dAmountInPool_lte?: InputMaybe<Scalars['BigInt']>;\n  dAmountInPool_not_eq?: InputMaybe<Scalars['BigInt']>;\n  dAmountInPool_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dPrice_eq?: InputMaybe<Scalars['Float']>;\n  dPrice_gt?: InputMaybe<Scalars['Float']>;\n  dPrice_gte?: InputMaybe<Scalars['Float']>;\n  dPrice_in?: InputMaybe<Array<Scalars['Float']>>;\n  dPrice_isNull?: InputMaybe<Scalars['Boolean']>;\n  dPrice_lt?: InputMaybe<Scalars['Float']>;\n  dPrice_lte?: InputMaybe<Scalars['Float']>;\n  dPrice_not_eq?: InputMaybe<Scalars['Float']>;\n  dPrice_not_in?: InputMaybe<Array<Scalars['Float']>>;\n  event_contains?: InputMaybe<Scalars['String']>;\n  event_containsInsensitive?: InputMaybe<Scalars['String']>;\n  event_endsWith?: InputMaybe<Scalars['String']>;\n  event_eq?: InputMaybe<Scalars['String']>;\n  event_gt?: InputMaybe<Scalars['String']>;\n  event_gte?: InputMaybe<Scalars['String']>;\n  event_in?: InputMaybe<Array<Scalars['String']>>;\n  event_isNull?: InputMaybe<Scalars['Boolean']>;\n  event_lt?: InputMaybe<Scalars['String']>;\n  event_lte?: InputMaybe<Scalars['String']>;\n  event_not_contains?: InputMaybe<Scalars['String']>;\n  event_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  event_not_endsWith?: InputMaybe<Scalars['String']>;\n  event_not_eq?: InputMaybe<Scalars['String']>;\n  event_not_in?: InputMaybe<Array<Scalars['String']>>;\n  event_not_startsWith?: InputMaybe<Scalars['String']>;\n  event_startsWith?: InputMaybe<Scalars['String']>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  newAmountInPool_eq?: InputMaybe<Scalars['BigInt']>;\n  newAmountInPool_gt?: InputMaybe<Scalars['BigInt']>;\n  newAmountInPool_gte?: InputMaybe<Scalars['BigInt']>;\n  newAmountInPool_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newAmountInPool_isNull?: InputMaybe<Scalars['Boolean']>;\n  newAmountInPool_lt?: InputMaybe<Scalars['BigInt']>;\n  newAmountInPool_lte?: InputMaybe<Scalars['BigInt']>;\n  newAmountInPool_not_eq?: InputMaybe<Scalars['BigInt']>;\n  newAmountInPool_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  newPrice_eq?: InputMaybe<Scalars['Float']>;\n  newPrice_gt?: InputMaybe<Scalars['Float']>;\n  newPrice_gte?: InputMaybe<Scalars['Float']>;\n  newPrice_in?: InputMaybe<Array<Scalars['Float']>>;\n  newPrice_isNull?: InputMaybe<Scalars['Boolean']>;\n  newPrice_lt?: InputMaybe<Scalars['Float']>;\n  newPrice_lte?: InputMaybe<Scalars['Float']>;\n  newPrice_not_eq?: InputMaybe<Scalars['Float']>;\n  newPrice_not_in?: InputMaybe<Array<Scalars['Float']>>;\n  timestamp_eq?: InputMaybe<Scalars['DateTime']>;\n  timestamp_gt?: InputMaybe<Scalars['DateTime']>;\n  timestamp_gte?: InputMaybe<Scalars['DateTime']>;\n  timestamp_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  timestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  timestamp_lt?: InputMaybe<Scalars['DateTime']>;\n  timestamp_lte?: InputMaybe<Scalars['DateTime']>;\n  timestamp_not_eq?: InputMaybe<Scalars['DateTime']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  ztgTraded_eq?: InputMaybe<Scalars['BigInt']>;\n  ztgTraded_gt?: InputMaybe<Scalars['BigInt']>;\n  ztgTraded_gte?: InputMaybe<Scalars['BigInt']>;\n  ztgTraded_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  ztgTraded_isNull?: InputMaybe<Scalars['Boolean']>;\n  ztgTraded_lt?: InputMaybe<Scalars['BigInt']>;\n  ztgTraded_lte?: InputMaybe<Scalars['BigInt']>;\n  ztgTraded_not_eq?: InputMaybe<Scalars['BigInt']>;\n  ztgTraded_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport type HistoricalAssetsConnection = {\n  __typename?: 'HistoricalAssetsConnection';\n  edges: Array<HistoricalAssetEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\n/**\n * Market history of a particular market. Records all transactions\n * associated with the market.\n */\nexport type HistoricalMarket = {\n  __typename?: 'HistoricalMarket';\n  /** Height of the block */\n  blockNumber: Scalars['Int'];\n  /** Event method which initiated this change */\n  event: Scalars['String'];\n  id: Scalars['String'];\n  /** Zeitgeist's identifier for market */\n  marketId: Scalars['Int'];\n  /** Zeitgeist's identifier for pool */\n  poolId?: Maybe<Scalars['Int']>;\n  /** New market report. Null if no change */\n  report?: Maybe<MarketReport>;\n  /** New resolved outcome. Null if no change */\n  resolvedOutcome?: Maybe<Scalars['String']>;\n  /** New status. Null if no change */\n  status?: Maybe<Scalars['String']>;\n  /** Timestamp of the block */\n  timestamp: Scalars['DateTime'];\n};\n\nexport type HistoricalMarketEdge = {\n  __typename?: 'HistoricalMarketEdge';\n  cursor: Scalars['String'];\n  node: HistoricalMarket;\n};\n\nexport enum HistoricalMarketOrderByInput {\n  BlockNumberAsc = 'blockNumber_ASC',\n  BlockNumberDesc = 'blockNumber_DESC',\n  EventAsc = 'event_ASC',\n  EventDesc = 'event_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  MarketIdAsc = 'marketId_ASC',\n  MarketIdDesc = 'marketId_DESC',\n  PoolIdAsc = 'poolId_ASC',\n  PoolIdDesc = 'poolId_DESC',\n  ReportAtAsc = 'report_at_ASC',\n  ReportAtDesc = 'report_at_DESC',\n  ReportByAsc = 'report_by_ASC',\n  ReportByDesc = 'report_by_DESC',\n  ResolvedOutcomeAsc = 'resolvedOutcome_ASC',\n  ResolvedOutcomeDesc = 'resolvedOutcome_DESC',\n  StatusAsc = 'status_ASC',\n  StatusDesc = 'status_DESC',\n  TimestampAsc = 'timestamp_ASC',\n  TimestampDesc = 'timestamp_DESC'\n}\n\nexport type HistoricalMarketWhereInput = {\n  AND?: InputMaybe<Array<HistoricalMarketWhereInput>>;\n  OR?: InputMaybe<Array<HistoricalMarketWhereInput>>;\n  blockNumber_eq?: InputMaybe<Scalars['Int']>;\n  blockNumber_gt?: InputMaybe<Scalars['Int']>;\n  blockNumber_gte?: InputMaybe<Scalars['Int']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_lt?: InputMaybe<Scalars['Int']>;\n  blockNumber_lte?: InputMaybe<Scalars['Int']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  event_contains?: InputMaybe<Scalars['String']>;\n  event_containsInsensitive?: InputMaybe<Scalars['String']>;\n  event_endsWith?: InputMaybe<Scalars['String']>;\n  event_eq?: InputMaybe<Scalars['String']>;\n  event_gt?: InputMaybe<Scalars['String']>;\n  event_gte?: InputMaybe<Scalars['String']>;\n  event_in?: InputMaybe<Array<Scalars['String']>>;\n  event_isNull?: InputMaybe<Scalars['Boolean']>;\n  event_lt?: InputMaybe<Scalars['String']>;\n  event_lte?: InputMaybe<Scalars['String']>;\n  event_not_contains?: InputMaybe<Scalars['String']>;\n  event_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  event_not_endsWith?: InputMaybe<Scalars['String']>;\n  event_not_eq?: InputMaybe<Scalars['String']>;\n  event_not_in?: InputMaybe<Array<Scalars['String']>>;\n  event_not_startsWith?: InputMaybe<Scalars['String']>;\n  event_startsWith?: InputMaybe<Scalars['String']>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  marketId_eq?: InputMaybe<Scalars['Int']>;\n  marketId_gt?: InputMaybe<Scalars['Int']>;\n  marketId_gte?: InputMaybe<Scalars['Int']>;\n  marketId_in?: InputMaybe<Array<Scalars['Int']>>;\n  marketId_isNull?: InputMaybe<Scalars['Boolean']>;\n  marketId_lt?: InputMaybe<Scalars['Int']>;\n  marketId_lte?: InputMaybe<Scalars['Int']>;\n  marketId_not_eq?: InputMaybe<Scalars['Int']>;\n  marketId_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolId_eq?: InputMaybe<Scalars['Int']>;\n  poolId_gt?: InputMaybe<Scalars['Int']>;\n  poolId_gte?: InputMaybe<Scalars['Int']>;\n  poolId_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolId_isNull?: InputMaybe<Scalars['Boolean']>;\n  poolId_lt?: InputMaybe<Scalars['Int']>;\n  poolId_lte?: InputMaybe<Scalars['Int']>;\n  poolId_not_eq?: InputMaybe<Scalars['Int']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  report?: InputMaybe<MarketReportWhereInput>;\n  report_isNull?: InputMaybe<Scalars['Boolean']>;\n  resolvedOutcome_contains?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_containsInsensitive?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_endsWith?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_eq?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_gt?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_gte?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_in?: InputMaybe<Array<Scalars['String']>>;\n  resolvedOutcome_isNull?: InputMaybe<Scalars['Boolean']>;\n  resolvedOutcome_lt?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_lte?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_contains?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_endsWith?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_eq?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_in?: InputMaybe<Array<Scalars['String']>>;\n  resolvedOutcome_not_startsWith?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_startsWith?: InputMaybe<Scalars['String']>;\n  status_contains?: InputMaybe<Scalars['String']>;\n  status_containsInsensitive?: InputMaybe<Scalars['String']>;\n  status_endsWith?: InputMaybe<Scalars['String']>;\n  status_eq?: InputMaybe<Scalars['String']>;\n  status_gt?: InputMaybe<Scalars['String']>;\n  status_gte?: InputMaybe<Scalars['String']>;\n  status_in?: InputMaybe<Array<Scalars['String']>>;\n  status_isNull?: InputMaybe<Scalars['Boolean']>;\n  status_lt?: InputMaybe<Scalars['String']>;\n  status_lte?: InputMaybe<Scalars['String']>;\n  status_not_contains?: InputMaybe<Scalars['String']>;\n  status_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  status_not_endsWith?: InputMaybe<Scalars['String']>;\n  status_not_eq?: InputMaybe<Scalars['String']>;\n  status_not_in?: InputMaybe<Array<Scalars['String']>>;\n  status_not_startsWith?: InputMaybe<Scalars['String']>;\n  status_startsWith?: InputMaybe<Scalars['String']>;\n  timestamp_eq?: InputMaybe<Scalars['DateTime']>;\n  timestamp_gt?: InputMaybe<Scalars['DateTime']>;\n  timestamp_gte?: InputMaybe<Scalars['DateTime']>;\n  timestamp_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  timestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  timestamp_lt?: InputMaybe<Scalars['DateTime']>;\n  timestamp_lte?: InputMaybe<Scalars['DateTime']>;\n  timestamp_not_eq?: InputMaybe<Scalars['DateTime']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n};\n\nexport type HistoricalMarketsConnection = {\n  __typename?: 'HistoricalMarketsConnection';\n  edges: Array<HistoricalMarketEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\n/**\n * Liquidity history of a particular pool. Records all transactions\n * associated with the pool.\n */\nexport type HistoricalPool = {\n  __typename?: 'HistoricalPool';\n  /** Height of the block */\n  blockNumber: Scalars['Int'];\n  /** Volume difference */\n  dVolume?: Maybe<Scalars['BigInt']>;\n  /** Event method which initiated this change */\n  event: Scalars['String'];\n  id: Scalars['String'];\n  /** Zeitgeist's identifier for pool */\n  poolId: Scalars['Int'];\n  /** Current status of the pool */\n  poolStatus: Scalars['String'];\n  /** Timestamp of the block */\n  timestamp: Scalars['DateTime'];\n  /** New updated volume */\n  volume?: Maybe<Scalars['BigInt']>;\n  /** New amount of ZTG present in the pool */\n  ztgQty?: Maybe<Scalars['BigInt']>;\n};\n\nexport type HistoricalPoolEdge = {\n  __typename?: 'HistoricalPoolEdge';\n  cursor: Scalars['String'];\n  node: HistoricalPool;\n};\n\nexport enum HistoricalPoolOrderByInput {\n  BlockNumberAsc = 'blockNumber_ASC',\n  BlockNumberDesc = 'blockNumber_DESC',\n  DVolumeAsc = 'dVolume_ASC',\n  DVolumeDesc = 'dVolume_DESC',\n  EventAsc = 'event_ASC',\n  EventDesc = 'event_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  PoolIdAsc = 'poolId_ASC',\n  PoolIdDesc = 'poolId_DESC',\n  PoolStatusAsc = 'poolStatus_ASC',\n  PoolStatusDesc = 'poolStatus_DESC',\n  TimestampAsc = 'timestamp_ASC',\n  TimestampDesc = 'timestamp_DESC',\n  VolumeAsc = 'volume_ASC',\n  VolumeDesc = 'volume_DESC',\n  ZtgQtyAsc = 'ztgQty_ASC',\n  ZtgQtyDesc = 'ztgQty_DESC'\n}\n\nexport type HistoricalPoolWhereInput = {\n  AND?: InputMaybe<Array<HistoricalPoolWhereInput>>;\n  OR?: InputMaybe<Array<HistoricalPoolWhereInput>>;\n  blockNumber_eq?: InputMaybe<Scalars['Int']>;\n  blockNumber_gt?: InputMaybe<Scalars['Int']>;\n  blockNumber_gte?: InputMaybe<Scalars['Int']>;\n  blockNumber_in?: InputMaybe<Array<Scalars['Int']>>;\n  blockNumber_isNull?: InputMaybe<Scalars['Boolean']>;\n  blockNumber_lt?: InputMaybe<Scalars['Int']>;\n  blockNumber_lte?: InputMaybe<Scalars['Int']>;\n  blockNumber_not_eq?: InputMaybe<Scalars['Int']>;\n  blockNumber_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  dVolume_eq?: InputMaybe<Scalars['BigInt']>;\n  dVolume_gt?: InputMaybe<Scalars['BigInt']>;\n  dVolume_gte?: InputMaybe<Scalars['BigInt']>;\n  dVolume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  dVolume_isNull?: InputMaybe<Scalars['Boolean']>;\n  dVolume_lt?: InputMaybe<Scalars['BigInt']>;\n  dVolume_lte?: InputMaybe<Scalars['BigInt']>;\n  dVolume_not_eq?: InputMaybe<Scalars['BigInt']>;\n  dVolume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  event_contains?: InputMaybe<Scalars['String']>;\n  event_containsInsensitive?: InputMaybe<Scalars['String']>;\n  event_endsWith?: InputMaybe<Scalars['String']>;\n  event_eq?: InputMaybe<Scalars['String']>;\n  event_gt?: InputMaybe<Scalars['String']>;\n  event_gte?: InputMaybe<Scalars['String']>;\n  event_in?: InputMaybe<Array<Scalars['String']>>;\n  event_isNull?: InputMaybe<Scalars['Boolean']>;\n  event_lt?: InputMaybe<Scalars['String']>;\n  event_lte?: InputMaybe<Scalars['String']>;\n  event_not_contains?: InputMaybe<Scalars['String']>;\n  event_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  event_not_endsWith?: InputMaybe<Scalars['String']>;\n  event_not_eq?: InputMaybe<Scalars['String']>;\n  event_not_in?: InputMaybe<Array<Scalars['String']>>;\n  event_not_startsWith?: InputMaybe<Scalars['String']>;\n  event_startsWith?: InputMaybe<Scalars['String']>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  poolId_eq?: InputMaybe<Scalars['Int']>;\n  poolId_gt?: InputMaybe<Scalars['Int']>;\n  poolId_gte?: InputMaybe<Scalars['Int']>;\n  poolId_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolId_isNull?: InputMaybe<Scalars['Boolean']>;\n  poolId_lt?: InputMaybe<Scalars['Int']>;\n  poolId_lte?: InputMaybe<Scalars['Int']>;\n  poolId_not_eq?: InputMaybe<Scalars['Int']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolStatus_contains?: InputMaybe<Scalars['String']>;\n  poolStatus_containsInsensitive?: InputMaybe<Scalars['String']>;\n  poolStatus_endsWith?: InputMaybe<Scalars['String']>;\n  poolStatus_eq?: InputMaybe<Scalars['String']>;\n  poolStatus_gt?: InputMaybe<Scalars['String']>;\n  poolStatus_gte?: InputMaybe<Scalars['String']>;\n  poolStatus_in?: InputMaybe<Array<Scalars['String']>>;\n  poolStatus_isNull?: InputMaybe<Scalars['Boolean']>;\n  poolStatus_lt?: InputMaybe<Scalars['String']>;\n  poolStatus_lte?: InputMaybe<Scalars['String']>;\n  poolStatus_not_contains?: InputMaybe<Scalars['String']>;\n  poolStatus_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  poolStatus_not_endsWith?: InputMaybe<Scalars['String']>;\n  poolStatus_not_eq?: InputMaybe<Scalars['String']>;\n  poolStatus_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolStatus_not_startsWith?: InputMaybe<Scalars['String']>;\n  poolStatus_startsWith?: InputMaybe<Scalars['String']>;\n  timestamp_eq?: InputMaybe<Scalars['DateTime']>;\n  timestamp_gt?: InputMaybe<Scalars['DateTime']>;\n  timestamp_gte?: InputMaybe<Scalars['DateTime']>;\n  timestamp_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  timestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n  timestamp_lt?: InputMaybe<Scalars['DateTime']>;\n  timestamp_lte?: InputMaybe<Scalars['DateTime']>;\n  timestamp_not_eq?: InputMaybe<Scalars['DateTime']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  volume_eq?: InputMaybe<Scalars['BigInt']>;\n  volume_gt?: InputMaybe<Scalars['BigInt']>;\n  volume_gte?: InputMaybe<Scalars['BigInt']>;\n  volume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  volume_isNull?: InputMaybe<Scalars['Boolean']>;\n  volume_lt?: InputMaybe<Scalars['BigInt']>;\n  volume_lte?: InputMaybe<Scalars['BigInt']>;\n  volume_not_eq?: InputMaybe<Scalars['BigInt']>;\n  volume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  ztgQty_eq?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_gt?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_gte?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  ztgQty_isNull?: InputMaybe<Scalars['Boolean']>;\n  ztgQty_lt?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_lte?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_not_eq?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport type HistoricalPoolsConnection = {\n  __typename?: 'HistoricalPoolsConnection';\n  edges: Array<HistoricalPoolEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\n/** Prediction market details */\nexport type Market = {\n  __typename?: 'Market';\n  /** Address responsible for authorizing disputes. Null if Adv Comm is the authority */\n  authorizedAddress?: Maybe<Scalars['String']>;\n  /** The base asset in the market swap pool (usually a currency) */\n  baseAsset: Scalars['String'];\n  /** Tracks the status of the advisory, oracle and validity bonds */\n  bonds?: Maybe<MarketBonds>;\n  /** Share details */\n  categories?: Maybe<Array<Maybe<CategoryMetadata>>>;\n  /** Can be `Permissionless` or `Advised` */\n  creation: Scalars['String'];\n  /** Account address of the market creator */\n  creator: Scalars['String'];\n  /** The creator's fee */\n  creatorFee?: Maybe<Scalars['Int']>;\n  /** Deadlines for the market represented in blocks */\n  deadlines?: Maybe<MarketDeadlines>;\n  /** Description of the market */\n  description?: Maybe<Scalars['String']>;\n  /** Can be `Authorized` or `Court` or `SimpleDisputes` */\n  disputeMechanism: Scalars['String'];\n  /** Unique identifier of the object */\n  id: Scalars['String'];\n  /** Image for the market */\n  img?: Maybe<Scalars['String']>;\n  /** Zeitgeist's identifier for market */\n  marketId: Scalars['Int'];\n  /** Type of the market */\n  marketType: MarketType;\n  /** IPFS cid for market metadata */\n  metadata: Scalars['String'];\n  /** Account designated to report on the market */\n  oracle: Scalars['String'];\n  /** Share identifiers */\n  outcomeAssets: Array<Maybe<Scalars['String']>>;\n  /** Time period expressed in block numbers or timestamps */\n  period: MarketPeriod;\n  /** Market's liquidity pool details */\n  pool?: Maybe<Pool>;\n  /** Market question */\n  question?: Maybe<Scalars['String']>;\n  /** Reasoning for market rejection */\n  rejectReason?: Maybe<Scalars['String']>;\n  /** Reported outcome of the market. Null if the market is not reported yet */\n  report?: Maybe<MarketReport>;\n  /** Resolved outcome for the market */\n  resolvedOutcome?: Maybe<Scalars['String']>;\n  /** Type of scalar range if market is of type scalar */\n  scalarType?: Maybe<Scalars['String']>;\n  /** Scoring rule used for the market */\n  scoringRule: Scalars['String'];\n  /** Short name for the market */\n  slug?: Maybe<Scalars['String']>;\n  /** Status of the market */\n  status: Scalars['String'];\n  /** Market tags */\n  tags?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n/** Market's bond details */\nexport type MarketBond = {\n  __typename?: 'MarketBond';\n  /** The flag which determines if the bond was already unreserved and/or (partially) slashed */\n  isSettled: Scalars['Boolean'];\n  /** Amount reserved */\n  value: Scalars['BigInt'];\n  /** The account that reserved the bond */\n  who: Scalars['String'];\n};\n\nexport type MarketBondWhereInput = {\n  isSettled_eq?: InputMaybe<Scalars['Boolean']>;\n  isSettled_isNull?: InputMaybe<Scalars['Boolean']>;\n  isSettled_not_eq?: InputMaybe<Scalars['Boolean']>;\n  value_eq?: InputMaybe<Scalars['BigInt']>;\n  value_gt?: InputMaybe<Scalars['BigInt']>;\n  value_gte?: InputMaybe<Scalars['BigInt']>;\n  value_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  value_isNull?: InputMaybe<Scalars['Boolean']>;\n  value_lt?: InputMaybe<Scalars['BigInt']>;\n  value_lte?: InputMaybe<Scalars['BigInt']>;\n  value_not_eq?: InputMaybe<Scalars['BigInt']>;\n  value_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  who_contains?: InputMaybe<Scalars['String']>;\n  who_containsInsensitive?: InputMaybe<Scalars['String']>;\n  who_endsWith?: InputMaybe<Scalars['String']>;\n  who_eq?: InputMaybe<Scalars['String']>;\n  who_gt?: InputMaybe<Scalars['String']>;\n  who_gte?: InputMaybe<Scalars['String']>;\n  who_in?: InputMaybe<Array<Scalars['String']>>;\n  who_isNull?: InputMaybe<Scalars['Boolean']>;\n  who_lt?: InputMaybe<Scalars['String']>;\n  who_lte?: InputMaybe<Scalars['String']>;\n  who_not_contains?: InputMaybe<Scalars['String']>;\n  who_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  who_not_endsWith?: InputMaybe<Scalars['String']>;\n  who_not_eq?: InputMaybe<Scalars['String']>;\n  who_not_in?: InputMaybe<Array<Scalars['String']>>;\n  who_not_startsWith?: InputMaybe<Scalars['String']>;\n  who_startsWith?: InputMaybe<Scalars['String']>;\n};\n\n/**\n * Amount reserved for creation of markets, selecting oracles, joining the council,\n * making treasury proposals, setting on-chain identities, voting,\n * creating DAOs, and other parts of the protocol.\n */\nexport type MarketBonds = {\n  __typename?: 'MarketBonds';\n  /** Bond associated with creation of markets */\n  creation?: Maybe<MarketBond>;\n  /** Bond associated with oracle selection */\n  oracle?: Maybe<MarketBond>;\n};\n\nexport type MarketBondsWhereInput = {\n  creation?: InputMaybe<MarketBondWhereInput>;\n  creation_isNull?: InputMaybe<Scalars['Boolean']>;\n  oracle?: InputMaybe<MarketBondWhereInput>;\n  oracle_isNull?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Deadlines for the market represented in blocks */\nexport type MarketDeadlines = {\n  __typename?: 'MarketDeadlines';\n  disputeDuration: Scalars['BigInt'];\n  gracePeriod: Scalars['BigInt'];\n  oracleDuration: Scalars['BigInt'];\n};\n\nexport type MarketDeadlinesWhereInput = {\n  disputeDuration_eq?: InputMaybe<Scalars['BigInt']>;\n  disputeDuration_gt?: InputMaybe<Scalars['BigInt']>;\n  disputeDuration_gte?: InputMaybe<Scalars['BigInt']>;\n  disputeDuration_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  disputeDuration_isNull?: InputMaybe<Scalars['Boolean']>;\n  disputeDuration_lt?: InputMaybe<Scalars['BigInt']>;\n  disputeDuration_lte?: InputMaybe<Scalars['BigInt']>;\n  disputeDuration_not_eq?: InputMaybe<Scalars['BigInt']>;\n  disputeDuration_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  gracePeriod_eq?: InputMaybe<Scalars['BigInt']>;\n  gracePeriod_gt?: InputMaybe<Scalars['BigInt']>;\n  gracePeriod_gte?: InputMaybe<Scalars['BigInt']>;\n  gracePeriod_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  gracePeriod_isNull?: InputMaybe<Scalars['Boolean']>;\n  gracePeriod_lt?: InputMaybe<Scalars['BigInt']>;\n  gracePeriod_lte?: InputMaybe<Scalars['BigInt']>;\n  gracePeriod_not_eq?: InputMaybe<Scalars['BigInt']>;\n  gracePeriod_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  oracleDuration_eq?: InputMaybe<Scalars['BigInt']>;\n  oracleDuration_gt?: InputMaybe<Scalars['BigInt']>;\n  oracleDuration_gte?: InputMaybe<Scalars['BigInt']>;\n  oracleDuration_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  oracleDuration_isNull?: InputMaybe<Scalars['Boolean']>;\n  oracleDuration_lt?: InputMaybe<Scalars['BigInt']>;\n  oracleDuration_lte?: InputMaybe<Scalars['BigInt']>;\n  oracleDuration_not_eq?: InputMaybe<Scalars['BigInt']>;\n  oracleDuration_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport type MarketEdge = {\n  __typename?: 'MarketEdge';\n  cursor: Scalars['String'];\n  node: Market;\n};\n\nexport enum MarketOrderByInput {\n  AuthorizedAddressAsc = 'authorizedAddress_ASC',\n  AuthorizedAddressDesc = 'authorizedAddress_DESC',\n  BaseAssetAsc = 'baseAsset_ASC',\n  BaseAssetDesc = 'baseAsset_DESC',\n  CreationAsc = 'creation_ASC',\n  CreationDesc = 'creation_DESC',\n  CreatorFeeAsc = 'creatorFee_ASC',\n  CreatorFeeDesc = 'creatorFee_DESC',\n  CreatorAsc = 'creator_ASC',\n  CreatorDesc = 'creator_DESC',\n  DeadlinesDisputeDurationAsc = 'deadlines_disputeDuration_ASC',\n  DeadlinesDisputeDurationDesc = 'deadlines_disputeDuration_DESC',\n  DeadlinesGracePeriodAsc = 'deadlines_gracePeriod_ASC',\n  DeadlinesGracePeriodDesc = 'deadlines_gracePeriod_DESC',\n  DeadlinesOracleDurationAsc = 'deadlines_oracleDuration_ASC',\n  DeadlinesOracleDurationDesc = 'deadlines_oracleDuration_DESC',\n  DescriptionAsc = 'description_ASC',\n  DescriptionDesc = 'description_DESC',\n  DisputeMechanismAsc = 'disputeMechanism_ASC',\n  DisputeMechanismDesc = 'disputeMechanism_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  ImgAsc = 'img_ASC',\n  ImgDesc = 'img_DESC',\n  MarketIdAsc = 'marketId_ASC',\n  MarketIdDesc = 'marketId_DESC',\n  MarketTypeCategoricalAsc = 'marketType_categorical_ASC',\n  MarketTypeCategoricalDesc = 'marketType_categorical_DESC',\n  MetadataAsc = 'metadata_ASC',\n  MetadataDesc = 'metadata_DESC',\n  OracleAsc = 'oracle_ASC',\n  OracleDesc = 'oracle_DESC',\n  PeriodEndAsc = 'period_end_ASC',\n  PeriodEndDesc = 'period_end_DESC',\n  PeriodStartAsc = 'period_start_ASC',\n  PeriodStartDesc = 'period_start_DESC',\n  PoolAccountIdAsc = 'pool_accountId_ASC',\n  PoolAccountIdDesc = 'pool_accountId_DESC',\n  PoolBaseAssetAsc = 'pool_baseAsset_ASC',\n  PoolBaseAssetDesc = 'pool_baseAsset_DESC',\n  PoolCreatedAtAsc = 'pool_createdAt_ASC',\n  PoolCreatedAtDesc = 'pool_createdAt_DESC',\n  PoolIdAsc = 'pool_id_ASC',\n  PoolIdDesc = 'pool_id_DESC',\n  PoolMarketIdAsc = 'pool_marketId_ASC',\n  PoolMarketIdDesc = 'pool_marketId_DESC',\n  PoolPoolIdAsc = 'pool_poolId_ASC',\n  PoolPoolIdDesc = 'pool_poolId_DESC',\n  PoolPoolStatusAsc = 'pool_poolStatus_ASC',\n  PoolPoolStatusDesc = 'pool_poolStatus_DESC',\n  PoolScoringRuleAsc = 'pool_scoringRule_ASC',\n  PoolScoringRuleDesc = 'pool_scoringRule_DESC',\n  PoolSwapFeeAsc = 'pool_swapFee_ASC',\n  PoolSwapFeeDesc = 'pool_swapFee_DESC',\n  PoolTotalSubsidyAsc = 'pool_totalSubsidy_ASC',\n  PoolTotalSubsidyDesc = 'pool_totalSubsidy_DESC',\n  PoolTotalWeightAsc = 'pool_totalWeight_ASC',\n  PoolTotalWeightDesc = 'pool_totalWeight_DESC',\n  PoolVolumeAsc = 'pool_volume_ASC',\n  PoolVolumeDesc = 'pool_volume_DESC',\n  PoolZtgQtyAsc = 'pool_ztgQty_ASC',\n  PoolZtgQtyDesc = 'pool_ztgQty_DESC',\n  QuestionAsc = 'question_ASC',\n  QuestionDesc = 'question_DESC',\n  RejectReasonAsc = 'rejectReason_ASC',\n  RejectReasonDesc = 'rejectReason_DESC',\n  ReportAtAsc = 'report_at_ASC',\n  ReportAtDesc = 'report_at_DESC',\n  ReportByAsc = 'report_by_ASC',\n  ReportByDesc = 'report_by_DESC',\n  ResolvedOutcomeAsc = 'resolvedOutcome_ASC',\n  ResolvedOutcomeDesc = 'resolvedOutcome_DESC',\n  ScalarTypeAsc = 'scalarType_ASC',\n  ScalarTypeDesc = 'scalarType_DESC',\n  ScoringRuleAsc = 'scoringRule_ASC',\n  ScoringRuleDesc = 'scoringRule_DESC',\n  SlugAsc = 'slug_ASC',\n  SlugDesc = 'slug_DESC',\n  StatusAsc = 'status_ASC',\n  StatusDesc = 'status_DESC'\n}\n\n/** Time period of the market */\nexport type MarketPeriod = {\n  __typename?: 'MarketPeriod';\n  /** start & end block numbers */\n  block?: Maybe<Array<Maybe<Scalars['BigInt']>>>;\n  /** Timestamp at which market should end */\n  end: Scalars['BigInt'];\n  /** Timestamp at which market should start */\n  start: Scalars['BigInt'];\n  /** start & end timestamps */\n  timestamp?: Maybe<Array<Maybe<Scalars['BigInt']>>>;\n};\n\nexport type MarketPeriodWhereInput = {\n  block_containsAll?: InputMaybe<Array<InputMaybe<Scalars['BigInt']>>>;\n  block_containsAny?: InputMaybe<Array<InputMaybe<Scalars['BigInt']>>>;\n  block_containsNone?: InputMaybe<Array<InputMaybe<Scalars['BigInt']>>>;\n  block_isNull?: InputMaybe<Scalars['Boolean']>;\n  end_eq?: InputMaybe<Scalars['BigInt']>;\n  end_gt?: InputMaybe<Scalars['BigInt']>;\n  end_gte?: InputMaybe<Scalars['BigInt']>;\n  end_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  end_isNull?: InputMaybe<Scalars['Boolean']>;\n  end_lt?: InputMaybe<Scalars['BigInt']>;\n  end_lte?: InputMaybe<Scalars['BigInt']>;\n  end_not_eq?: InputMaybe<Scalars['BigInt']>;\n  end_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  start_eq?: InputMaybe<Scalars['BigInt']>;\n  start_gt?: InputMaybe<Scalars['BigInt']>;\n  start_gte?: InputMaybe<Scalars['BigInt']>;\n  start_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  start_isNull?: InputMaybe<Scalars['Boolean']>;\n  start_lt?: InputMaybe<Scalars['BigInt']>;\n  start_lte?: InputMaybe<Scalars['BigInt']>;\n  start_not_eq?: InputMaybe<Scalars['BigInt']>;\n  start_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_containsAll?: InputMaybe<Array<InputMaybe<Scalars['BigInt']>>>;\n  timestamp_containsAny?: InputMaybe<Array<InputMaybe<Scalars['BigInt']>>>;\n  timestamp_containsNone?: InputMaybe<Array<InputMaybe<Scalars['BigInt']>>>;\n  timestamp_isNull?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Market's report details */\nexport type MarketReport = {\n  __typename?: 'MarketReport';\n  /** Block number */\n  at?: Maybe<Scalars['Int']>;\n  /** Account which reported */\n  by?: Maybe<Scalars['String']>;\n  /** Outcome details */\n  outcome: OutcomeReport;\n};\n\nexport type MarketReportWhereInput = {\n  at_eq?: InputMaybe<Scalars['Int']>;\n  at_gt?: InputMaybe<Scalars['Int']>;\n  at_gte?: InputMaybe<Scalars['Int']>;\n  at_in?: InputMaybe<Array<Scalars['Int']>>;\n  at_isNull?: InputMaybe<Scalars['Boolean']>;\n  at_lt?: InputMaybe<Scalars['Int']>;\n  at_lte?: InputMaybe<Scalars['Int']>;\n  at_not_eq?: InputMaybe<Scalars['Int']>;\n  at_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  by_contains?: InputMaybe<Scalars['String']>;\n  by_containsInsensitive?: InputMaybe<Scalars['String']>;\n  by_endsWith?: InputMaybe<Scalars['String']>;\n  by_eq?: InputMaybe<Scalars['String']>;\n  by_gt?: InputMaybe<Scalars['String']>;\n  by_gte?: InputMaybe<Scalars['String']>;\n  by_in?: InputMaybe<Array<Scalars['String']>>;\n  by_isNull?: InputMaybe<Scalars['Boolean']>;\n  by_lt?: InputMaybe<Scalars['String']>;\n  by_lte?: InputMaybe<Scalars['String']>;\n  by_not_contains?: InputMaybe<Scalars['String']>;\n  by_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  by_not_endsWith?: InputMaybe<Scalars['String']>;\n  by_not_eq?: InputMaybe<Scalars['String']>;\n  by_not_in?: InputMaybe<Array<Scalars['String']>>;\n  by_not_startsWith?: InputMaybe<Scalars['String']>;\n  by_startsWith?: InputMaybe<Scalars['String']>;\n  outcome?: InputMaybe<OutcomeReportWhereInput>;\n  outcome_isNull?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Market's types */\nexport type MarketType = {\n  __typename?: 'MarketType';\n  /** Number of categories if categorical market */\n  categorical?: Maybe<Scalars['String']>;\n  /** Range of values if scalar market */\n  scalar?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type MarketTypeWhereInput = {\n  categorical_contains?: InputMaybe<Scalars['String']>;\n  categorical_containsInsensitive?: InputMaybe<Scalars['String']>;\n  categorical_endsWith?: InputMaybe<Scalars['String']>;\n  categorical_eq?: InputMaybe<Scalars['String']>;\n  categorical_gt?: InputMaybe<Scalars['String']>;\n  categorical_gte?: InputMaybe<Scalars['String']>;\n  categorical_in?: InputMaybe<Array<Scalars['String']>>;\n  categorical_isNull?: InputMaybe<Scalars['Boolean']>;\n  categorical_lt?: InputMaybe<Scalars['String']>;\n  categorical_lte?: InputMaybe<Scalars['String']>;\n  categorical_not_contains?: InputMaybe<Scalars['String']>;\n  categorical_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  categorical_not_endsWith?: InputMaybe<Scalars['String']>;\n  categorical_not_eq?: InputMaybe<Scalars['String']>;\n  categorical_not_in?: InputMaybe<Array<Scalars['String']>>;\n  categorical_not_startsWith?: InputMaybe<Scalars['String']>;\n  categorical_startsWith?: InputMaybe<Scalars['String']>;\n  scalar_containsAll?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  scalar_containsAny?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  scalar_containsNone?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  scalar_isNull?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport type MarketWhereInput = {\n  AND?: InputMaybe<Array<MarketWhereInput>>;\n  OR?: InputMaybe<Array<MarketWhereInput>>;\n  authorizedAddress_contains?: InputMaybe<Scalars['String']>;\n  authorizedAddress_containsInsensitive?: InputMaybe<Scalars['String']>;\n  authorizedAddress_endsWith?: InputMaybe<Scalars['String']>;\n  authorizedAddress_eq?: InputMaybe<Scalars['String']>;\n  authorizedAddress_gt?: InputMaybe<Scalars['String']>;\n  authorizedAddress_gte?: InputMaybe<Scalars['String']>;\n  authorizedAddress_in?: InputMaybe<Array<Scalars['String']>>;\n  authorizedAddress_isNull?: InputMaybe<Scalars['Boolean']>;\n  authorizedAddress_lt?: InputMaybe<Scalars['String']>;\n  authorizedAddress_lte?: InputMaybe<Scalars['String']>;\n  authorizedAddress_not_contains?: InputMaybe<Scalars['String']>;\n  authorizedAddress_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  authorizedAddress_not_endsWith?: InputMaybe<Scalars['String']>;\n  authorizedAddress_not_eq?: InputMaybe<Scalars['String']>;\n  authorizedAddress_not_in?: InputMaybe<Array<Scalars['String']>>;\n  authorizedAddress_not_startsWith?: InputMaybe<Scalars['String']>;\n  authorizedAddress_startsWith?: InputMaybe<Scalars['String']>;\n  baseAsset_contains?: InputMaybe<Scalars['String']>;\n  baseAsset_containsInsensitive?: InputMaybe<Scalars['String']>;\n  baseAsset_endsWith?: InputMaybe<Scalars['String']>;\n  baseAsset_eq?: InputMaybe<Scalars['String']>;\n  baseAsset_gt?: InputMaybe<Scalars['String']>;\n  baseAsset_gte?: InputMaybe<Scalars['String']>;\n  baseAsset_in?: InputMaybe<Array<Scalars['String']>>;\n  baseAsset_isNull?: InputMaybe<Scalars['Boolean']>;\n  baseAsset_lt?: InputMaybe<Scalars['String']>;\n  baseAsset_lte?: InputMaybe<Scalars['String']>;\n  baseAsset_not_contains?: InputMaybe<Scalars['String']>;\n  baseAsset_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  baseAsset_not_endsWith?: InputMaybe<Scalars['String']>;\n  baseAsset_not_eq?: InputMaybe<Scalars['String']>;\n  baseAsset_not_in?: InputMaybe<Array<Scalars['String']>>;\n  baseAsset_not_startsWith?: InputMaybe<Scalars['String']>;\n  baseAsset_startsWith?: InputMaybe<Scalars['String']>;\n  bonds?: InputMaybe<MarketBondsWhereInput>;\n  bonds_isNull?: InputMaybe<Scalars['Boolean']>;\n  categories_isNull?: InputMaybe<Scalars['Boolean']>;\n  creation_contains?: InputMaybe<Scalars['String']>;\n  creation_containsInsensitive?: InputMaybe<Scalars['String']>;\n  creation_endsWith?: InputMaybe<Scalars['String']>;\n  creation_eq?: InputMaybe<Scalars['String']>;\n  creation_gt?: InputMaybe<Scalars['String']>;\n  creation_gte?: InputMaybe<Scalars['String']>;\n  creation_in?: InputMaybe<Array<Scalars['String']>>;\n  creation_isNull?: InputMaybe<Scalars['Boolean']>;\n  creation_lt?: InputMaybe<Scalars['String']>;\n  creation_lte?: InputMaybe<Scalars['String']>;\n  creation_not_contains?: InputMaybe<Scalars['String']>;\n  creation_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  creation_not_endsWith?: InputMaybe<Scalars['String']>;\n  creation_not_eq?: InputMaybe<Scalars['String']>;\n  creation_not_in?: InputMaybe<Array<Scalars['String']>>;\n  creation_not_startsWith?: InputMaybe<Scalars['String']>;\n  creation_startsWith?: InputMaybe<Scalars['String']>;\n  creatorFee_eq?: InputMaybe<Scalars['Int']>;\n  creatorFee_gt?: InputMaybe<Scalars['Int']>;\n  creatorFee_gte?: InputMaybe<Scalars['Int']>;\n  creatorFee_in?: InputMaybe<Array<Scalars['Int']>>;\n  creatorFee_isNull?: InputMaybe<Scalars['Boolean']>;\n  creatorFee_lt?: InputMaybe<Scalars['Int']>;\n  creatorFee_lte?: InputMaybe<Scalars['Int']>;\n  creatorFee_not_eq?: InputMaybe<Scalars['Int']>;\n  creatorFee_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  creator_contains?: InputMaybe<Scalars['String']>;\n  creator_containsInsensitive?: InputMaybe<Scalars['String']>;\n  creator_endsWith?: InputMaybe<Scalars['String']>;\n  creator_eq?: InputMaybe<Scalars['String']>;\n  creator_gt?: InputMaybe<Scalars['String']>;\n  creator_gte?: InputMaybe<Scalars['String']>;\n  creator_in?: InputMaybe<Array<Scalars['String']>>;\n  creator_isNull?: InputMaybe<Scalars['Boolean']>;\n  creator_lt?: InputMaybe<Scalars['String']>;\n  creator_lte?: InputMaybe<Scalars['String']>;\n  creator_not_contains?: InputMaybe<Scalars['String']>;\n  creator_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  creator_not_endsWith?: InputMaybe<Scalars['String']>;\n  creator_not_eq?: InputMaybe<Scalars['String']>;\n  creator_not_in?: InputMaybe<Array<Scalars['String']>>;\n  creator_not_startsWith?: InputMaybe<Scalars['String']>;\n  creator_startsWith?: InputMaybe<Scalars['String']>;\n  deadlines?: InputMaybe<MarketDeadlinesWhereInput>;\n  deadlines_isNull?: InputMaybe<Scalars['Boolean']>;\n  description_contains?: InputMaybe<Scalars['String']>;\n  description_containsInsensitive?: InputMaybe<Scalars['String']>;\n  description_endsWith?: InputMaybe<Scalars['String']>;\n  description_eq?: InputMaybe<Scalars['String']>;\n  description_gt?: InputMaybe<Scalars['String']>;\n  description_gte?: InputMaybe<Scalars['String']>;\n  description_in?: InputMaybe<Array<Scalars['String']>>;\n  description_isNull?: InputMaybe<Scalars['Boolean']>;\n  description_lt?: InputMaybe<Scalars['String']>;\n  description_lte?: InputMaybe<Scalars['String']>;\n  description_not_contains?: InputMaybe<Scalars['String']>;\n  description_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  description_not_endsWith?: InputMaybe<Scalars['String']>;\n  description_not_eq?: InputMaybe<Scalars['String']>;\n  description_not_in?: InputMaybe<Array<Scalars['String']>>;\n  description_not_startsWith?: InputMaybe<Scalars['String']>;\n  description_startsWith?: InputMaybe<Scalars['String']>;\n  disputeMechanism_contains?: InputMaybe<Scalars['String']>;\n  disputeMechanism_containsInsensitive?: InputMaybe<Scalars['String']>;\n  disputeMechanism_endsWith?: InputMaybe<Scalars['String']>;\n  disputeMechanism_eq?: InputMaybe<Scalars['String']>;\n  disputeMechanism_gt?: InputMaybe<Scalars['String']>;\n  disputeMechanism_gte?: InputMaybe<Scalars['String']>;\n  disputeMechanism_in?: InputMaybe<Array<Scalars['String']>>;\n  disputeMechanism_isNull?: InputMaybe<Scalars['Boolean']>;\n  disputeMechanism_lt?: InputMaybe<Scalars['String']>;\n  disputeMechanism_lte?: InputMaybe<Scalars['String']>;\n  disputeMechanism_not_contains?: InputMaybe<Scalars['String']>;\n  disputeMechanism_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  disputeMechanism_not_endsWith?: InputMaybe<Scalars['String']>;\n  disputeMechanism_not_eq?: InputMaybe<Scalars['String']>;\n  disputeMechanism_not_in?: InputMaybe<Array<Scalars['String']>>;\n  disputeMechanism_not_startsWith?: InputMaybe<Scalars['String']>;\n  disputeMechanism_startsWith?: InputMaybe<Scalars['String']>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  img_contains?: InputMaybe<Scalars['String']>;\n  img_containsInsensitive?: InputMaybe<Scalars['String']>;\n  img_endsWith?: InputMaybe<Scalars['String']>;\n  img_eq?: InputMaybe<Scalars['String']>;\n  img_gt?: InputMaybe<Scalars['String']>;\n  img_gte?: InputMaybe<Scalars['String']>;\n  img_in?: InputMaybe<Array<Scalars['String']>>;\n  img_isNull?: InputMaybe<Scalars['Boolean']>;\n  img_lt?: InputMaybe<Scalars['String']>;\n  img_lte?: InputMaybe<Scalars['String']>;\n  img_not_contains?: InputMaybe<Scalars['String']>;\n  img_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  img_not_endsWith?: InputMaybe<Scalars['String']>;\n  img_not_eq?: InputMaybe<Scalars['String']>;\n  img_not_in?: InputMaybe<Array<Scalars['String']>>;\n  img_not_startsWith?: InputMaybe<Scalars['String']>;\n  img_startsWith?: InputMaybe<Scalars['String']>;\n  marketId_eq?: InputMaybe<Scalars['Int']>;\n  marketId_gt?: InputMaybe<Scalars['Int']>;\n  marketId_gte?: InputMaybe<Scalars['Int']>;\n  marketId_in?: InputMaybe<Array<Scalars['Int']>>;\n  marketId_isNull?: InputMaybe<Scalars['Boolean']>;\n  marketId_lt?: InputMaybe<Scalars['Int']>;\n  marketId_lte?: InputMaybe<Scalars['Int']>;\n  marketId_not_eq?: InputMaybe<Scalars['Int']>;\n  marketId_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  marketType?: InputMaybe<MarketTypeWhereInput>;\n  marketType_isNull?: InputMaybe<Scalars['Boolean']>;\n  metadata_contains?: InputMaybe<Scalars['String']>;\n  metadata_containsInsensitive?: InputMaybe<Scalars['String']>;\n  metadata_endsWith?: InputMaybe<Scalars['String']>;\n  metadata_eq?: InputMaybe<Scalars['String']>;\n  metadata_gt?: InputMaybe<Scalars['String']>;\n  metadata_gte?: InputMaybe<Scalars['String']>;\n  metadata_in?: InputMaybe<Array<Scalars['String']>>;\n  metadata_isNull?: InputMaybe<Scalars['Boolean']>;\n  metadata_lt?: InputMaybe<Scalars['String']>;\n  metadata_lte?: InputMaybe<Scalars['String']>;\n  metadata_not_contains?: InputMaybe<Scalars['String']>;\n  metadata_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  metadata_not_endsWith?: InputMaybe<Scalars['String']>;\n  metadata_not_eq?: InputMaybe<Scalars['String']>;\n  metadata_not_in?: InputMaybe<Array<Scalars['String']>>;\n  metadata_not_startsWith?: InputMaybe<Scalars['String']>;\n  metadata_startsWith?: InputMaybe<Scalars['String']>;\n  oracle_contains?: InputMaybe<Scalars['String']>;\n  oracle_containsInsensitive?: InputMaybe<Scalars['String']>;\n  oracle_endsWith?: InputMaybe<Scalars['String']>;\n  oracle_eq?: InputMaybe<Scalars['String']>;\n  oracle_gt?: InputMaybe<Scalars['String']>;\n  oracle_gte?: InputMaybe<Scalars['String']>;\n  oracle_in?: InputMaybe<Array<Scalars['String']>>;\n  oracle_isNull?: InputMaybe<Scalars['Boolean']>;\n  oracle_lt?: InputMaybe<Scalars['String']>;\n  oracle_lte?: InputMaybe<Scalars['String']>;\n  oracle_not_contains?: InputMaybe<Scalars['String']>;\n  oracle_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  oracle_not_endsWith?: InputMaybe<Scalars['String']>;\n  oracle_not_eq?: InputMaybe<Scalars['String']>;\n  oracle_not_in?: InputMaybe<Array<Scalars['String']>>;\n  oracle_not_startsWith?: InputMaybe<Scalars['String']>;\n  oracle_startsWith?: InputMaybe<Scalars['String']>;\n  outcomeAssets_containsAll?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  outcomeAssets_containsAny?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  outcomeAssets_containsNone?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  outcomeAssets_isNull?: InputMaybe<Scalars['Boolean']>;\n  period?: InputMaybe<MarketPeriodWhereInput>;\n  period_isNull?: InputMaybe<Scalars['Boolean']>;\n  pool?: InputMaybe<PoolWhereInput>;\n  pool_isNull?: InputMaybe<Scalars['Boolean']>;\n  question_contains?: InputMaybe<Scalars['String']>;\n  question_containsInsensitive?: InputMaybe<Scalars['String']>;\n  question_endsWith?: InputMaybe<Scalars['String']>;\n  question_eq?: InputMaybe<Scalars['String']>;\n  question_gt?: InputMaybe<Scalars['String']>;\n  question_gte?: InputMaybe<Scalars['String']>;\n  question_in?: InputMaybe<Array<Scalars['String']>>;\n  question_isNull?: InputMaybe<Scalars['Boolean']>;\n  question_lt?: InputMaybe<Scalars['String']>;\n  question_lte?: InputMaybe<Scalars['String']>;\n  question_not_contains?: InputMaybe<Scalars['String']>;\n  question_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  question_not_endsWith?: InputMaybe<Scalars['String']>;\n  question_not_eq?: InputMaybe<Scalars['String']>;\n  question_not_in?: InputMaybe<Array<Scalars['String']>>;\n  question_not_startsWith?: InputMaybe<Scalars['String']>;\n  question_startsWith?: InputMaybe<Scalars['String']>;\n  rejectReason_contains?: InputMaybe<Scalars['String']>;\n  rejectReason_containsInsensitive?: InputMaybe<Scalars['String']>;\n  rejectReason_endsWith?: InputMaybe<Scalars['String']>;\n  rejectReason_eq?: InputMaybe<Scalars['String']>;\n  rejectReason_gt?: InputMaybe<Scalars['String']>;\n  rejectReason_gte?: InputMaybe<Scalars['String']>;\n  rejectReason_in?: InputMaybe<Array<Scalars['String']>>;\n  rejectReason_isNull?: InputMaybe<Scalars['Boolean']>;\n  rejectReason_lt?: InputMaybe<Scalars['String']>;\n  rejectReason_lte?: InputMaybe<Scalars['String']>;\n  rejectReason_not_contains?: InputMaybe<Scalars['String']>;\n  rejectReason_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  rejectReason_not_endsWith?: InputMaybe<Scalars['String']>;\n  rejectReason_not_eq?: InputMaybe<Scalars['String']>;\n  rejectReason_not_in?: InputMaybe<Array<Scalars['String']>>;\n  rejectReason_not_startsWith?: InputMaybe<Scalars['String']>;\n  rejectReason_startsWith?: InputMaybe<Scalars['String']>;\n  report?: InputMaybe<MarketReportWhereInput>;\n  report_isNull?: InputMaybe<Scalars['Boolean']>;\n  resolvedOutcome_contains?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_containsInsensitive?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_endsWith?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_eq?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_gt?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_gte?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_in?: InputMaybe<Array<Scalars['String']>>;\n  resolvedOutcome_isNull?: InputMaybe<Scalars['Boolean']>;\n  resolvedOutcome_lt?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_lte?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_contains?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_endsWith?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_eq?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_not_in?: InputMaybe<Array<Scalars['String']>>;\n  resolvedOutcome_not_startsWith?: InputMaybe<Scalars['String']>;\n  resolvedOutcome_startsWith?: InputMaybe<Scalars['String']>;\n  scalarType_contains?: InputMaybe<Scalars['String']>;\n  scalarType_containsInsensitive?: InputMaybe<Scalars['String']>;\n  scalarType_endsWith?: InputMaybe<Scalars['String']>;\n  scalarType_eq?: InputMaybe<Scalars['String']>;\n  scalarType_gt?: InputMaybe<Scalars['String']>;\n  scalarType_gte?: InputMaybe<Scalars['String']>;\n  scalarType_in?: InputMaybe<Array<Scalars['String']>>;\n  scalarType_isNull?: InputMaybe<Scalars['Boolean']>;\n  scalarType_lt?: InputMaybe<Scalars['String']>;\n  scalarType_lte?: InputMaybe<Scalars['String']>;\n  scalarType_not_contains?: InputMaybe<Scalars['String']>;\n  scalarType_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  scalarType_not_endsWith?: InputMaybe<Scalars['String']>;\n  scalarType_not_eq?: InputMaybe<Scalars['String']>;\n  scalarType_not_in?: InputMaybe<Array<Scalars['String']>>;\n  scalarType_not_startsWith?: InputMaybe<Scalars['String']>;\n  scalarType_startsWith?: InputMaybe<Scalars['String']>;\n  scoringRule_contains?: InputMaybe<Scalars['String']>;\n  scoringRule_containsInsensitive?: InputMaybe<Scalars['String']>;\n  scoringRule_endsWith?: InputMaybe<Scalars['String']>;\n  scoringRule_eq?: InputMaybe<Scalars['String']>;\n  scoringRule_gt?: InputMaybe<Scalars['String']>;\n  scoringRule_gte?: InputMaybe<Scalars['String']>;\n  scoringRule_in?: InputMaybe<Array<Scalars['String']>>;\n  scoringRule_isNull?: InputMaybe<Scalars['Boolean']>;\n  scoringRule_lt?: InputMaybe<Scalars['String']>;\n  scoringRule_lte?: InputMaybe<Scalars['String']>;\n  scoringRule_not_contains?: InputMaybe<Scalars['String']>;\n  scoringRule_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  scoringRule_not_endsWith?: InputMaybe<Scalars['String']>;\n  scoringRule_not_eq?: InputMaybe<Scalars['String']>;\n  scoringRule_not_in?: InputMaybe<Array<Scalars['String']>>;\n  scoringRule_not_startsWith?: InputMaybe<Scalars['String']>;\n  scoringRule_startsWith?: InputMaybe<Scalars['String']>;\n  slug_contains?: InputMaybe<Scalars['String']>;\n  slug_containsInsensitive?: InputMaybe<Scalars['String']>;\n  slug_endsWith?: InputMaybe<Scalars['String']>;\n  slug_eq?: InputMaybe<Scalars['String']>;\n  slug_gt?: InputMaybe<Scalars['String']>;\n  slug_gte?: InputMaybe<Scalars['String']>;\n  slug_in?: InputMaybe<Array<Scalars['String']>>;\n  slug_isNull?: InputMaybe<Scalars['Boolean']>;\n  slug_lt?: InputMaybe<Scalars['String']>;\n  slug_lte?: InputMaybe<Scalars['String']>;\n  slug_not_contains?: InputMaybe<Scalars['String']>;\n  slug_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  slug_not_endsWith?: InputMaybe<Scalars['String']>;\n  slug_not_eq?: InputMaybe<Scalars['String']>;\n  slug_not_in?: InputMaybe<Array<Scalars['String']>>;\n  slug_not_startsWith?: InputMaybe<Scalars['String']>;\n  slug_startsWith?: InputMaybe<Scalars['String']>;\n  status_contains?: InputMaybe<Scalars['String']>;\n  status_containsInsensitive?: InputMaybe<Scalars['String']>;\n  status_endsWith?: InputMaybe<Scalars['String']>;\n  status_eq?: InputMaybe<Scalars['String']>;\n  status_gt?: InputMaybe<Scalars['String']>;\n  status_gte?: InputMaybe<Scalars['String']>;\n  status_in?: InputMaybe<Array<Scalars['String']>>;\n  status_isNull?: InputMaybe<Scalars['Boolean']>;\n  status_lt?: InputMaybe<Scalars['String']>;\n  status_lte?: InputMaybe<Scalars['String']>;\n  status_not_contains?: InputMaybe<Scalars['String']>;\n  status_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  status_not_endsWith?: InputMaybe<Scalars['String']>;\n  status_not_eq?: InputMaybe<Scalars['String']>;\n  status_not_in?: InputMaybe<Array<Scalars['String']>>;\n  status_not_startsWith?: InputMaybe<Scalars['String']>;\n  status_startsWith?: InputMaybe<Scalars['String']>;\n  tags_containsAll?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  tags_containsAny?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  tags_containsNone?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  tags_isNull?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport type MarketsConnection = {\n  __typename?: 'MarketsConnection';\n  edges: Array<MarketEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\n/** Market's outcome details */\nexport type OutcomeReport = {\n  __typename?: 'OutcomeReport';\n  /** Index of the categories. Null if market is scalar */\n  categorical?: Maybe<Scalars['Int']>;\n  /** Resultant value from the scalar range. Null if market is categorical */\n  scalar?: Maybe<Scalars['BigInt']>;\n};\n\nexport type OutcomeReportWhereInput = {\n  categorical_eq?: InputMaybe<Scalars['Int']>;\n  categorical_gt?: InputMaybe<Scalars['Int']>;\n  categorical_gte?: InputMaybe<Scalars['Int']>;\n  categorical_in?: InputMaybe<Array<Scalars['Int']>>;\n  categorical_isNull?: InputMaybe<Scalars['Boolean']>;\n  categorical_lt?: InputMaybe<Scalars['Int']>;\n  categorical_lte?: InputMaybe<Scalars['Int']>;\n  categorical_not_eq?: InputMaybe<Scalars['Int']>;\n  categorical_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  scalar_eq?: InputMaybe<Scalars['BigInt']>;\n  scalar_gt?: InputMaybe<Scalars['BigInt']>;\n  scalar_gte?: InputMaybe<Scalars['BigInt']>;\n  scalar_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  scalar_isNull?: InputMaybe<Scalars['Boolean']>;\n  scalar_lt?: InputMaybe<Scalars['BigInt']>;\n  scalar_lte?: InputMaybe<Scalars['BigInt']>;\n  scalar_not_eq?: InputMaybe<Scalars['BigInt']>;\n  scalar_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  endCursor: Scalars['String'];\n  hasNextPage: Scalars['Boolean'];\n  hasPreviousPage: Scalars['Boolean'];\n  startCursor: Scalars['String'];\n};\n\n/** Liquidity pool details */\nexport type Pool = {\n  __typename?: 'Pool';\n  /** Zeitgeist's identifier for account */\n  accountId?: Maybe<Scalars['String']>;\n  /** The base asset in the market swap pool (usually a currency) */\n  baseAsset: Scalars['String'];\n  /** Timestamp of pool creation */\n  createdAt: Scalars['DateTime'];\n  id: Scalars['String'];\n  marketId: Scalars['Int'];\n  /** Zeitgeist's identifier for pool */\n  poolId: Scalars['Int'];\n  /** Status of the pool */\n  poolStatus: Scalars['String'];\n  /** Scoring rule used for the pool */\n  scoringRule: Scalars['String'];\n  /** Fee applied to each swap */\n  swapFee: Scalars['String'];\n  /** Subsidy gathered for the market */\n  totalSubsidy: Scalars['String'];\n  /** Sum of `weights` */\n  totalWeight: Scalars['String'];\n  /** Total amount of ZTG that has moved through a market's liquidity pool */\n  volume: Scalars['BigInt'];\n  /** List of lengths for each asset */\n  weights: Array<Maybe<Weight>>;\n  /** Amount of ZTG present in the pool */\n  ztgQty: Scalars['BigInt'];\n};\n\nexport type PoolEdge = {\n  __typename?: 'PoolEdge';\n  cursor: Scalars['String'];\n  node: Pool;\n};\n\nexport enum PoolOrderByInput {\n  AccountIdAsc = 'accountId_ASC',\n  AccountIdDesc = 'accountId_DESC',\n  BaseAssetAsc = 'baseAsset_ASC',\n  BaseAssetDesc = 'baseAsset_DESC',\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  MarketIdAsc = 'marketId_ASC',\n  MarketIdDesc = 'marketId_DESC',\n  PoolIdAsc = 'poolId_ASC',\n  PoolIdDesc = 'poolId_DESC',\n  PoolStatusAsc = 'poolStatus_ASC',\n  PoolStatusDesc = 'poolStatus_DESC',\n  ScoringRuleAsc = 'scoringRule_ASC',\n  ScoringRuleDesc = 'scoringRule_DESC',\n  SwapFeeAsc = 'swapFee_ASC',\n  SwapFeeDesc = 'swapFee_DESC',\n  TotalSubsidyAsc = 'totalSubsidy_ASC',\n  TotalSubsidyDesc = 'totalSubsidy_DESC',\n  TotalWeightAsc = 'totalWeight_ASC',\n  TotalWeightDesc = 'totalWeight_DESC',\n  VolumeAsc = 'volume_ASC',\n  VolumeDesc = 'volume_DESC',\n  ZtgQtyAsc = 'ztgQty_ASC',\n  ZtgQtyDesc = 'ztgQty_DESC'\n}\n\nexport type PoolWhereInput = {\n  AND?: InputMaybe<Array<PoolWhereInput>>;\n  OR?: InputMaybe<Array<PoolWhereInput>>;\n  accountId_contains?: InputMaybe<Scalars['String']>;\n  accountId_containsInsensitive?: InputMaybe<Scalars['String']>;\n  accountId_endsWith?: InputMaybe<Scalars['String']>;\n  accountId_eq?: InputMaybe<Scalars['String']>;\n  accountId_gt?: InputMaybe<Scalars['String']>;\n  accountId_gte?: InputMaybe<Scalars['String']>;\n  accountId_in?: InputMaybe<Array<Scalars['String']>>;\n  accountId_isNull?: InputMaybe<Scalars['Boolean']>;\n  accountId_lt?: InputMaybe<Scalars['String']>;\n  accountId_lte?: InputMaybe<Scalars['String']>;\n  accountId_not_contains?: InputMaybe<Scalars['String']>;\n  accountId_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  accountId_not_endsWith?: InputMaybe<Scalars['String']>;\n  accountId_not_eq?: InputMaybe<Scalars['String']>;\n  accountId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  accountId_not_startsWith?: InputMaybe<Scalars['String']>;\n  accountId_startsWith?: InputMaybe<Scalars['String']>;\n  baseAsset_contains?: InputMaybe<Scalars['String']>;\n  baseAsset_containsInsensitive?: InputMaybe<Scalars['String']>;\n  baseAsset_endsWith?: InputMaybe<Scalars['String']>;\n  baseAsset_eq?: InputMaybe<Scalars['String']>;\n  baseAsset_gt?: InputMaybe<Scalars['String']>;\n  baseAsset_gte?: InputMaybe<Scalars['String']>;\n  baseAsset_in?: InputMaybe<Array<Scalars['String']>>;\n  baseAsset_isNull?: InputMaybe<Scalars['Boolean']>;\n  baseAsset_lt?: InputMaybe<Scalars['String']>;\n  baseAsset_lte?: InputMaybe<Scalars['String']>;\n  baseAsset_not_contains?: InputMaybe<Scalars['String']>;\n  baseAsset_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  baseAsset_not_endsWith?: InputMaybe<Scalars['String']>;\n  baseAsset_not_eq?: InputMaybe<Scalars['String']>;\n  baseAsset_not_in?: InputMaybe<Array<Scalars['String']>>;\n  baseAsset_not_startsWith?: InputMaybe<Scalars['String']>;\n  baseAsset_startsWith?: InputMaybe<Scalars['String']>;\n  createdAt_eq?: InputMaybe<Scalars['DateTime']>;\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdAt_isNull?: InputMaybe<Scalars['Boolean']>;\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  createdAt_not_eq?: InputMaybe<Scalars['DateTime']>;\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  id_contains?: InputMaybe<Scalars['String']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_endsWith?: InputMaybe<Scalars['String']>;\n  id_eq?: InputMaybe<Scalars['String']>;\n  id_gt?: InputMaybe<Scalars['String']>;\n  id_gte?: InputMaybe<Scalars['String']>;\n  id_in?: InputMaybe<Array<Scalars['String']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']>;\n  id_lt?: InputMaybe<Scalars['String']>;\n  id_lte?: InputMaybe<Scalars['String']>;\n  id_not_contains?: InputMaybe<Scalars['String']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']>;\n  id_not_eq?: InputMaybe<Scalars['String']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']>;\n  id_startsWith?: InputMaybe<Scalars['String']>;\n  marketId_eq?: InputMaybe<Scalars['Int']>;\n  marketId_gt?: InputMaybe<Scalars['Int']>;\n  marketId_gte?: InputMaybe<Scalars['Int']>;\n  marketId_in?: InputMaybe<Array<Scalars['Int']>>;\n  marketId_isNull?: InputMaybe<Scalars['Boolean']>;\n  marketId_lt?: InputMaybe<Scalars['Int']>;\n  marketId_lte?: InputMaybe<Scalars['Int']>;\n  marketId_not_eq?: InputMaybe<Scalars['Int']>;\n  marketId_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolId_eq?: InputMaybe<Scalars['Int']>;\n  poolId_gt?: InputMaybe<Scalars['Int']>;\n  poolId_gte?: InputMaybe<Scalars['Int']>;\n  poolId_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolId_isNull?: InputMaybe<Scalars['Boolean']>;\n  poolId_lt?: InputMaybe<Scalars['Int']>;\n  poolId_lte?: InputMaybe<Scalars['Int']>;\n  poolId_not_eq?: InputMaybe<Scalars['Int']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolStatus_contains?: InputMaybe<Scalars['String']>;\n  poolStatus_containsInsensitive?: InputMaybe<Scalars['String']>;\n  poolStatus_endsWith?: InputMaybe<Scalars['String']>;\n  poolStatus_eq?: InputMaybe<Scalars['String']>;\n  poolStatus_gt?: InputMaybe<Scalars['String']>;\n  poolStatus_gte?: InputMaybe<Scalars['String']>;\n  poolStatus_in?: InputMaybe<Array<Scalars['String']>>;\n  poolStatus_isNull?: InputMaybe<Scalars['Boolean']>;\n  poolStatus_lt?: InputMaybe<Scalars['String']>;\n  poolStatus_lte?: InputMaybe<Scalars['String']>;\n  poolStatus_not_contains?: InputMaybe<Scalars['String']>;\n  poolStatus_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  poolStatus_not_endsWith?: InputMaybe<Scalars['String']>;\n  poolStatus_not_eq?: InputMaybe<Scalars['String']>;\n  poolStatus_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolStatus_not_startsWith?: InputMaybe<Scalars['String']>;\n  poolStatus_startsWith?: InputMaybe<Scalars['String']>;\n  scoringRule_contains?: InputMaybe<Scalars['String']>;\n  scoringRule_containsInsensitive?: InputMaybe<Scalars['String']>;\n  scoringRule_endsWith?: InputMaybe<Scalars['String']>;\n  scoringRule_eq?: InputMaybe<Scalars['String']>;\n  scoringRule_gt?: InputMaybe<Scalars['String']>;\n  scoringRule_gte?: InputMaybe<Scalars['String']>;\n  scoringRule_in?: InputMaybe<Array<Scalars['String']>>;\n  scoringRule_isNull?: InputMaybe<Scalars['Boolean']>;\n  scoringRule_lt?: InputMaybe<Scalars['String']>;\n  scoringRule_lte?: InputMaybe<Scalars['String']>;\n  scoringRule_not_contains?: InputMaybe<Scalars['String']>;\n  scoringRule_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  scoringRule_not_endsWith?: InputMaybe<Scalars['String']>;\n  scoringRule_not_eq?: InputMaybe<Scalars['String']>;\n  scoringRule_not_in?: InputMaybe<Array<Scalars['String']>>;\n  scoringRule_not_startsWith?: InputMaybe<Scalars['String']>;\n  scoringRule_startsWith?: InputMaybe<Scalars['String']>;\n  swapFee_contains?: InputMaybe<Scalars['String']>;\n  swapFee_containsInsensitive?: InputMaybe<Scalars['String']>;\n  swapFee_endsWith?: InputMaybe<Scalars['String']>;\n  swapFee_eq?: InputMaybe<Scalars['String']>;\n  swapFee_gt?: InputMaybe<Scalars['String']>;\n  swapFee_gte?: InputMaybe<Scalars['String']>;\n  swapFee_in?: InputMaybe<Array<Scalars['String']>>;\n  swapFee_isNull?: InputMaybe<Scalars['Boolean']>;\n  swapFee_lt?: InputMaybe<Scalars['String']>;\n  swapFee_lte?: InputMaybe<Scalars['String']>;\n  swapFee_not_contains?: InputMaybe<Scalars['String']>;\n  swapFee_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  swapFee_not_endsWith?: InputMaybe<Scalars['String']>;\n  swapFee_not_eq?: InputMaybe<Scalars['String']>;\n  swapFee_not_in?: InputMaybe<Array<Scalars['String']>>;\n  swapFee_not_startsWith?: InputMaybe<Scalars['String']>;\n  swapFee_startsWith?: InputMaybe<Scalars['String']>;\n  totalSubsidy_contains?: InputMaybe<Scalars['String']>;\n  totalSubsidy_containsInsensitive?: InputMaybe<Scalars['String']>;\n  totalSubsidy_endsWith?: InputMaybe<Scalars['String']>;\n  totalSubsidy_eq?: InputMaybe<Scalars['String']>;\n  totalSubsidy_gt?: InputMaybe<Scalars['String']>;\n  totalSubsidy_gte?: InputMaybe<Scalars['String']>;\n  totalSubsidy_in?: InputMaybe<Array<Scalars['String']>>;\n  totalSubsidy_isNull?: InputMaybe<Scalars['Boolean']>;\n  totalSubsidy_lt?: InputMaybe<Scalars['String']>;\n  totalSubsidy_lte?: InputMaybe<Scalars['String']>;\n  totalSubsidy_not_contains?: InputMaybe<Scalars['String']>;\n  totalSubsidy_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  totalSubsidy_not_endsWith?: InputMaybe<Scalars['String']>;\n  totalSubsidy_not_eq?: InputMaybe<Scalars['String']>;\n  totalSubsidy_not_in?: InputMaybe<Array<Scalars['String']>>;\n  totalSubsidy_not_startsWith?: InputMaybe<Scalars['String']>;\n  totalSubsidy_startsWith?: InputMaybe<Scalars['String']>;\n  totalWeight_contains?: InputMaybe<Scalars['String']>;\n  totalWeight_containsInsensitive?: InputMaybe<Scalars['String']>;\n  totalWeight_endsWith?: InputMaybe<Scalars['String']>;\n  totalWeight_eq?: InputMaybe<Scalars['String']>;\n  totalWeight_gt?: InputMaybe<Scalars['String']>;\n  totalWeight_gte?: InputMaybe<Scalars['String']>;\n  totalWeight_in?: InputMaybe<Array<Scalars['String']>>;\n  totalWeight_isNull?: InputMaybe<Scalars['Boolean']>;\n  totalWeight_lt?: InputMaybe<Scalars['String']>;\n  totalWeight_lte?: InputMaybe<Scalars['String']>;\n  totalWeight_not_contains?: InputMaybe<Scalars['String']>;\n  totalWeight_not_containsInsensitive?: InputMaybe<Scalars['String']>;\n  totalWeight_not_endsWith?: InputMaybe<Scalars['String']>;\n  totalWeight_not_eq?: InputMaybe<Scalars['String']>;\n  totalWeight_not_in?: InputMaybe<Array<Scalars['String']>>;\n  totalWeight_not_startsWith?: InputMaybe<Scalars['String']>;\n  totalWeight_startsWith?: InputMaybe<Scalars['String']>;\n  volume_eq?: InputMaybe<Scalars['BigInt']>;\n  volume_gt?: InputMaybe<Scalars['BigInt']>;\n  volume_gte?: InputMaybe<Scalars['BigInt']>;\n  volume_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  volume_isNull?: InputMaybe<Scalars['Boolean']>;\n  volume_lt?: InputMaybe<Scalars['BigInt']>;\n  volume_lte?: InputMaybe<Scalars['BigInt']>;\n  volume_not_eq?: InputMaybe<Scalars['BigInt']>;\n  volume_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  weights_isNull?: InputMaybe<Scalars['Boolean']>;\n  ztgQty_eq?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_gt?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_gte?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  ztgQty_isNull?: InputMaybe<Scalars['Boolean']>;\n  ztgQty_lt?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_lte?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_not_eq?: InputMaybe<Scalars['BigInt']>;\n  ztgQty_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport type PoolsConnection = {\n  __typename?: 'PoolsConnection';\n  edges: Array<PoolEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  accountBalanceById?: Maybe<AccountBalance>;\n  /** @deprecated Use accountBalanceById */\n  accountBalanceByUniqueInput?: Maybe<AccountBalance>;\n  accountBalances: Array<AccountBalance>;\n  accountBalancesConnection: AccountBalancesConnection;\n  accountById?: Maybe<Account>;\n  /** @deprecated Use accountById */\n  accountByUniqueInput?: Maybe<Account>;\n  accounts: Array<Account>;\n  accountsConnection: AccountsConnection;\n  assetById?: Maybe<Asset>;\n  /** @deprecated Use assetById */\n  assetByUniqueInput?: Maybe<Asset>;\n  assets: Array<Asset>;\n  assetsConnection: AssetsConnection;\n  historicalAccountBalanceById?: Maybe<HistoricalAccountBalance>;\n  /** @deprecated Use historicalAccountBalanceById */\n  historicalAccountBalanceByUniqueInput?: Maybe<HistoricalAccountBalance>;\n  historicalAccountBalances: Array<HistoricalAccountBalance>;\n  historicalAccountBalancesConnection: HistoricalAccountBalancesConnection;\n  historicalAssetById?: Maybe<HistoricalAsset>;\n  /** @deprecated Use historicalAssetById */\n  historicalAssetByUniqueInput?: Maybe<HistoricalAsset>;\n  historicalAssets: Array<HistoricalAsset>;\n  historicalAssetsConnection: HistoricalAssetsConnection;\n  historicalMarketById?: Maybe<HistoricalMarket>;\n  /** @deprecated Use historicalMarketById */\n  historicalMarketByUniqueInput?: Maybe<HistoricalMarket>;\n  historicalMarkets: Array<HistoricalMarket>;\n  historicalMarketsConnection: HistoricalMarketsConnection;\n  historicalPoolById?: Maybe<HistoricalPool>;\n  /** @deprecated Use historicalPoolById */\n  historicalPoolByUniqueInput?: Maybe<HistoricalPool>;\n  historicalPools: Array<HistoricalPool>;\n  historicalPoolsConnection: HistoricalPoolsConnection;\n  marketById?: Maybe<Market>;\n  /** @deprecated Use marketById */\n  marketByUniqueInput?: Maybe<Market>;\n  markets: Array<Market>;\n  marketsConnection: MarketsConnection;\n  poolById?: Maybe<Pool>;\n  /** @deprecated Use poolById */\n  poolByUniqueInput?: Maybe<Pool>;\n  pools: Array<Pool>;\n  poolsConnection: PoolsConnection;\n  squidStatus?: Maybe<SquidStatus>;\n  stats: Array<StatsResult>;\n};\n\n\nexport type QueryAccountBalanceByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryAccountBalanceByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryAccountBalancesArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountBalanceOrderByInput>>;\n  where?: InputMaybe<AccountBalanceWhereInput>;\n};\n\n\nexport type QueryAccountBalancesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy: Array<AccountBalanceOrderByInput>;\n  where?: InputMaybe<AccountBalanceWhereInput>;\n};\n\n\nexport type QueryAccountByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryAccountByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryAccountsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountOrderByInput>>;\n  where?: InputMaybe<AccountWhereInput>;\n};\n\n\nexport type QueryAccountsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy: Array<AccountOrderByInput>;\n  where?: InputMaybe<AccountWhereInput>;\n};\n\n\nexport type QueryAssetByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryAssetByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryAssetsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AssetOrderByInput>>;\n  where?: InputMaybe<AssetWhereInput>;\n};\n\n\nexport type QueryAssetsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy: Array<AssetOrderByInput>;\n  where?: InputMaybe<AssetWhereInput>;\n};\n\n\nexport type QueryHistoricalAccountBalanceByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryHistoricalAccountBalanceByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryHistoricalAccountBalancesArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<HistoricalAccountBalanceOrderByInput>>;\n  where?: InputMaybe<HistoricalAccountBalanceWhereInput>;\n};\n\n\nexport type QueryHistoricalAccountBalancesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy: Array<HistoricalAccountBalanceOrderByInput>;\n  where?: InputMaybe<HistoricalAccountBalanceWhereInput>;\n};\n\n\nexport type QueryHistoricalAssetByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryHistoricalAssetByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryHistoricalAssetsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<HistoricalAssetOrderByInput>>;\n  where?: InputMaybe<HistoricalAssetWhereInput>;\n};\n\n\nexport type QueryHistoricalAssetsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy: Array<HistoricalAssetOrderByInput>;\n  where?: InputMaybe<HistoricalAssetWhereInput>;\n};\n\n\nexport type QueryHistoricalMarketByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryHistoricalMarketByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryHistoricalMarketsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<HistoricalMarketOrderByInput>>;\n  where?: InputMaybe<HistoricalMarketWhereInput>;\n};\n\n\nexport type QueryHistoricalMarketsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy: Array<HistoricalMarketOrderByInput>;\n  where?: InputMaybe<HistoricalMarketWhereInput>;\n};\n\n\nexport type QueryHistoricalPoolByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryHistoricalPoolByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryHistoricalPoolsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<HistoricalPoolOrderByInput>>;\n  where?: InputMaybe<HistoricalPoolWhereInput>;\n};\n\n\nexport type QueryHistoricalPoolsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy: Array<HistoricalPoolOrderByInput>;\n  where?: InputMaybe<HistoricalPoolWhereInput>;\n};\n\n\nexport type QueryMarketByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryMarketByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryMarketsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<MarketOrderByInput>>;\n  where?: InputMaybe<MarketWhereInput>;\n};\n\n\nexport type QueryMarketsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy: Array<MarketOrderByInput>;\n  where?: InputMaybe<MarketWhereInput>;\n};\n\n\nexport type QueryPoolByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryPoolByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryPoolsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<PoolOrderByInput>>;\n  where?: InputMaybe<PoolWhereInput>;\n};\n\n\nexport type QueryPoolsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy: Array<PoolOrderByInput>;\n  where?: InputMaybe<PoolWhereInput>;\n};\n\n\nexport type QueryStatsArgs = {\n  marketIds: Array<Scalars['String']>;\n};\n\nexport type SquidStatus = {\n  __typename?: 'SquidStatus';\n  /** The height of the processed part of the chain */\n  height?: Maybe<Scalars['Int']>;\n};\n\nexport type StatsResult = {\n  __typename?: 'StatsResult';\n  marketId: Scalars['Float'];\n  participants: Scalars['Float'];\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  accountBalanceById?: Maybe<AccountBalance>;\n  accountBalances: Array<AccountBalance>;\n  accountById?: Maybe<Account>;\n  accounts: Array<Account>;\n  assetById?: Maybe<Asset>;\n  assets: Array<Asset>;\n  historicalAccountBalanceById?: Maybe<HistoricalAccountBalance>;\n  historicalAccountBalances: Array<HistoricalAccountBalance>;\n  historicalAssetById?: Maybe<HistoricalAsset>;\n  historicalAssets: Array<HistoricalAsset>;\n  historicalMarketById?: Maybe<HistoricalMarket>;\n  historicalMarkets: Array<HistoricalMarket>;\n  historicalPoolById?: Maybe<HistoricalPool>;\n  historicalPools: Array<HistoricalPool>;\n  marketById?: Maybe<Market>;\n  markets: Array<Market>;\n  poolById?: Maybe<Pool>;\n  pools: Array<Pool>;\n};\n\n\nexport type SubscriptionAccountBalanceByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionAccountBalancesArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountBalanceOrderByInput>>;\n  where?: InputMaybe<AccountBalanceWhereInput>;\n};\n\n\nexport type SubscriptionAccountByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionAccountsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountOrderByInput>>;\n  where?: InputMaybe<AccountWhereInput>;\n};\n\n\nexport type SubscriptionAssetByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionAssetsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AssetOrderByInput>>;\n  where?: InputMaybe<AssetWhereInput>;\n};\n\n\nexport type SubscriptionHistoricalAccountBalanceByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionHistoricalAccountBalancesArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<HistoricalAccountBalanceOrderByInput>>;\n  where?: InputMaybe<HistoricalAccountBalanceWhereInput>;\n};\n\n\nexport type SubscriptionHistoricalAssetByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionHistoricalAssetsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<HistoricalAssetOrderByInput>>;\n  where?: InputMaybe<HistoricalAssetWhereInput>;\n};\n\n\nexport type SubscriptionHistoricalMarketByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionHistoricalMarketsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<HistoricalMarketOrderByInput>>;\n  where?: InputMaybe<HistoricalMarketWhereInput>;\n};\n\n\nexport type SubscriptionHistoricalPoolByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionHistoricalPoolsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<HistoricalPoolOrderByInput>>;\n  where?: InputMaybe<HistoricalPoolWhereInput>;\n};\n\n\nexport type SubscriptionMarketByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionMarketsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<MarketOrderByInput>>;\n  where?: InputMaybe<MarketWhereInput>;\n};\n\n\nexport type SubscriptionPoolByIdArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type SubscriptionPoolsArgs = {\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<PoolOrderByInput>>;\n  where?: InputMaybe<PoolWhereInput>;\n};\n\n/** Asset weightage details */\nexport type Weight = {\n  __typename?: 'Weight';\n  /** Zeitgeist's identifier for asset */\n  assetId: Scalars['String'];\n  /** Length or weight of the asset */\n  len: Scalars['BigInt'];\n};\n\nexport type WhereIdInput = {\n  id: Scalars['String'];\n};\n\nexport type AccountBalancesQueryVariables = Exact<{\n  where?: InputMaybe<AccountBalanceWhereInput>;\n  order?: InputMaybe<Array<AccountBalanceOrderByInput> | AccountBalanceOrderByInput>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type AccountBalancesQuery = { __typename?: 'Query', accountBalances: Array<{ __typename?: 'AccountBalance', assetId: string, balance: any, id: string, account: { __typename?: 'Account', accountId: string, id: string, marketId?: number | null, poolId?: number | null } }> };\n\nexport type FullAccountBalanceFragment = { __typename?: 'AccountBalance', assetId: string, balance: any, id: string, account: { __typename?: 'Account', accountId: string, id: string, marketId?: number | null, poolId?: number | null } };\n\nexport type AssetsQueryVariables = Exact<{\n  where?: InputMaybe<AssetWhereInput>;\n  order?: InputMaybe<Array<AssetOrderByInput> | AssetOrderByInput>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type AssetsQuery = { __typename?: 'Query', assets: Array<{ __typename?: 'Asset', id: string, assetId: string, poolId?: number | null, price?: number | null, amountInPool?: any | null }> };\n\nexport type FullAssetFragment = { __typename?: 'Asset', id: string, assetId: string, poolId?: number | null, price?: number | null, amountInPool?: any | null };\n\nexport type HistoricalAccountBalancesQueryVariables = Exact<{\n  where?: InputMaybe<HistoricalAccountBalanceWhereInput>;\n  order?: InputMaybe<Array<HistoricalAccountBalanceOrderByInput> | HistoricalAccountBalanceOrderByInput>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type HistoricalAccountBalancesQuery = { __typename?: 'Query', historicalAccountBalances: Array<{ __typename?: 'HistoricalAccountBalance', accountId: string, assetId: string, balance: any, blockNumber: number, dBalance: any, event: string, id: string, timestamp: any }> };\n\nexport type FullHistoricalAccountBalanceFragment = { __typename?: 'HistoricalAccountBalance', accountId: string, assetId: string, balance: any, blockNumber: number, dBalance: any, event: string, id: string, timestamp: any };\n\nexport type HistoricalAssetsQueryVariables = Exact<{\n  where?: InputMaybe<HistoricalAssetWhereInput>;\n  order?: InputMaybe<Array<HistoricalAssetOrderByInput> | HistoricalAssetOrderByInput>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type HistoricalAssetsQuery = { __typename?: 'Query', historicalAssets: Array<{ __typename?: 'HistoricalAsset', accountId?: string | null, assetId: string, blockNumber: number, dAmountInPool?: any | null, dPrice?: number | null, event: string, id: string, newAmountInPool?: any | null, newPrice?: number | null, timestamp: any, ztgTraded?: any | null }> };\n\nexport type FullHistoricalAssetsFragment = { __typename?: 'HistoricalAsset', accountId?: string | null, assetId: string, blockNumber: number, dAmountInPool?: any | null, dPrice?: number | null, event: string, id: string, newAmountInPool?: any | null, newPrice?: number | null, timestamp: any, ztgTraded?: any | null };\n\nexport type MarketsQueryVariables = Exact<{\n  where?: InputMaybe<MarketWhereInput>;\n  order?: InputMaybe<Array<MarketOrderByInput> | MarketOrderByInput>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type MarketsQuery = { __typename?: 'Query', markets: Array<{ __typename?: 'Market', id: string, marketId: number, description?: string | null, creator: string, creatorFee?: number | null, creation: string, oracle: string, question?: string | null, slug?: string | null, img?: string | null, tags?: Array<string | null> | null, status: string, scoringRule: string, resolvedOutcome?: string | null, scalarType?: string | null, outcomeAssets: Array<string | null>, rejectReason?: string | null, disputeMechanism: string, marketType: { __typename?: 'MarketType', categorical?: string | null, scalar?: Array<string | null> | null }, period: { __typename?: 'MarketPeriod', block?: Array<any | null> | null, timestamp?: Array<any | null> | null, end: any, start: any }, report?: { __typename?: 'MarketReport', at?: number | null, by?: string | null, outcome: { __typename?: 'OutcomeReport', categorical?: number | null, scalar?: any | null } } | null, categories?: Array<{ __typename?: 'CategoryMetadata', ticker?: string | null, name?: string | null, color?: string | null } | null> | null, deadlines?: { __typename?: 'MarketDeadlines', disputeDuration: any, gracePeriod: any, oracleDuration: any } | null, bonds?: { __typename?: 'MarketBonds', creation?: { __typename?: 'MarketBond', isSettled: boolean, value: any, who: string } | null, oracle?: { __typename?: 'MarketBond', isSettled: boolean, value: any, who: string } | null } | null, pool?: { __typename?: 'Pool', accountId?: string | null, baseAsset: string, createdAt: any, id: string, marketId: number, poolId: number, poolStatus: string, scoringRule: string, swapFee: string, totalSubsidy: string, totalWeight: string, volume: any, ztgQty: any, weights: Array<{ __typename?: 'Weight', assetId: string, len: any } | null> } | null }> };\n\nexport type MarketStatusCountQueryVariables = Exact<{\n  status: Scalars['String'];\n}>;\n\n\nexport type MarketStatusCountQuery = { __typename?: 'Query', markets: Array<{ __typename?: 'Market', id: string }> };\n\nexport type FullMarketFragment = { __typename?: 'Market', id: string, marketId: number, description?: string | null, creator: string, creatorFee?: number | null, creation: string, oracle: string, question?: string | null, slug?: string | null, img?: string | null, tags?: Array<string | null> | null, status: string, scoringRule: string, resolvedOutcome?: string | null, scalarType?: string | null, outcomeAssets: Array<string | null>, rejectReason?: string | null, disputeMechanism: string, marketType: { __typename?: 'MarketType', categorical?: string | null, scalar?: Array<string | null> | null }, period: { __typename?: 'MarketPeriod', block?: Array<any | null> | null, timestamp?: Array<any | null> | null, end: any, start: any }, report?: { __typename?: 'MarketReport', at?: number | null, by?: string | null, outcome: { __typename?: 'OutcomeReport', categorical?: number | null, scalar?: any | null } } | null, categories?: Array<{ __typename?: 'CategoryMetadata', ticker?: string | null, name?: string | null, color?: string | null } | null> | null, deadlines?: { __typename?: 'MarketDeadlines', disputeDuration: any, gracePeriod: any, oracleDuration: any } | null, bonds?: { __typename?: 'MarketBonds', creation?: { __typename?: 'MarketBond', isSettled: boolean, value: any, who: string } | null, oracle?: { __typename?: 'MarketBond', isSettled: boolean, value: any, who: string } | null } | null, pool?: { __typename?: 'Pool', accountId?: string | null, baseAsset: string, createdAt: any, id: string, marketId: number, poolId: number, poolStatus: string, scoringRule: string, swapFee: string, totalSubsidy: string, totalWeight: string, volume: any, ztgQty: any, weights: Array<{ __typename?: 'Weight', assetId: string, len: any } | null> } | null };\n\nexport type PingQueryQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type PingQueryQuery = { __typename?: 'Query', markets: Array<{ __typename?: 'Market', id: string }> };\n\nexport type PoolsQueryVariables = Exact<{\n  where?: InputMaybe<PoolWhereInput>;\n  order?: InputMaybe<Array<PoolOrderByInput> | PoolOrderByInput>;\n  offset?: InputMaybe<Scalars['Int']>;\n  limit?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type PoolsQuery = { __typename?: 'Query', pools: Array<{ __typename?: 'Pool', accountId?: string | null, baseAsset: string, createdAt: any, id: string, marketId: number, poolId: number, poolStatus: string, scoringRule: string, swapFee: string, totalSubsidy: string, totalWeight: string, volume: any, ztgQty: any, weights: Array<{ __typename?: 'Weight', assetId: string, len: any } | null> }> };\n\nexport type FullPoolFragment = { __typename?: 'Pool', accountId?: string | null, baseAsset: string, createdAt: any, id: string, marketId: number, poolId: number, poolStatus: string, scoringRule: string, swapFee: string, totalSubsidy: string, totalWeight: string, volume: any, ztgQty: any, weights: Array<{ __typename?: 'Weight', assetId: string, len: any } | null> };\n\nexport const FullAccountBalanceFragmentDoc = gql`\n    fragment FullAccountBalance on AccountBalance {\n  account {\n    accountId\n    id\n    marketId\n    poolId\n  }\n  assetId\n  balance\n  id\n}\n    `;\nexport const FullAssetFragmentDoc = gql`\n    fragment FullAsset on Asset {\n  id\n  assetId\n  poolId\n  price\n  amountInPool\n}\n    `;\nexport const FullHistoricalAccountBalanceFragmentDoc = gql`\n    fragment FullHistoricalAccountBalance on HistoricalAccountBalance {\n  accountId\n  assetId\n  balance\n  blockNumber\n  dBalance\n  event\n  id\n  timestamp\n}\n    `;\nexport const FullHistoricalAssetsFragmentDoc = gql`\n    fragment FullHistoricalAssets on HistoricalAsset {\n  accountId\n  assetId\n  blockNumber\n  dAmountInPool\n  dPrice\n  event\n  id\n  newAmountInPool\n  newPrice\n  timestamp\n  ztgTraded\n}\n    `;\nexport const FullPoolFragmentDoc = gql`\n    fragment FullPool on Pool {\n  accountId\n  baseAsset\n  createdAt\n  id\n  marketId\n  poolId\n  poolStatus\n  scoringRule\n  swapFee\n  totalSubsidy\n  totalWeight\n  volume\n  weights {\n    assetId\n    len\n  }\n  ztgQty\n}\n    `;\nexport const FullMarketFragmentDoc = gql`\n    fragment FullMarket on Market {\n  id\n  marketId\n  description\n  creator\n  creatorFee\n  creation\n  oracle\n  question\n  slug\n  img\n  tags\n  status\n  scoringRule\n  resolvedOutcome\n  scalarType\n  outcomeAssets\n  rejectReason\n  marketType {\n    categorical\n    scalar\n  }\n  period {\n    block\n    timestamp\n    end\n    start\n  }\n  report {\n    at\n    by\n    outcome {\n      categorical\n      scalar\n    }\n  }\n  disputeMechanism\n  categories {\n    ticker\n    name\n    color\n  }\n  deadlines {\n    disputeDuration\n    gracePeriod\n    oracleDuration\n  }\n  bonds {\n    creation {\n      isSettled\n      value\n      who\n    }\n    oracle {\n      isSettled\n      value\n      who\n    }\n  }\n  pool {\n    ...FullPool\n  }\n}\n    ${FullPoolFragmentDoc}`;\nexport const AccountBalancesDocument = gql`\n    query accountBalances($where: AccountBalanceWhereInput, $order: [AccountBalanceOrderByInput!], $offset: Int, $limit: Int) {\n  accountBalances(where: $where, orderBy: $order, offset: $offset, limit: $limit) {\n    ...FullAccountBalance\n  }\n}\n    ${FullAccountBalanceFragmentDoc}`;\nexport const AssetsDocument = gql`\n    query assets($where: AssetWhereInput, $order: [AssetOrderByInput!], $offset: Int, $limit: Int) {\n  assets(where: $where, orderBy: $order, offset: $offset, limit: $limit) {\n    ...FullAsset\n  }\n}\n    ${FullAssetFragmentDoc}`;\nexport const HistoricalAccountBalancesDocument = gql`\n    query historicalAccountBalances($where: HistoricalAccountBalanceWhereInput, $order: [HistoricalAccountBalanceOrderByInput!], $offset: Int, $limit: Int) {\n  historicalAccountBalances(\n    where: $where\n    orderBy: $order\n    offset: $offset\n    limit: $limit\n  ) {\n    ...FullHistoricalAccountBalance\n  }\n}\n    ${FullHistoricalAccountBalanceFragmentDoc}`;\nexport const HistoricalAssetsDocument = gql`\n    query historicalAssets($where: HistoricalAssetWhereInput, $order: [HistoricalAssetOrderByInput!], $offset: Int, $limit: Int) {\n  historicalAssets(where: $where, orderBy: $order, offset: $offset, limit: $limit) {\n    ...FullHistoricalAssets\n  }\n}\n    ${FullHistoricalAssetsFragmentDoc}`;\nexport const MarketsDocument = gql`\n    query markets($where: MarketWhereInput, $order: [MarketOrderByInput!], $limit: Int, $offset: Int) {\n  markets(where: $where, limit: $limit, offset: $offset, orderBy: $order) {\n    ...FullMarket\n  }\n}\n    ${FullMarketFragmentDoc}`;\nexport const MarketStatusCountDocument = gql`\n    query marketStatusCount($status: String!) {\n  markets(where: {status_eq: $status}) {\n    id\n  }\n}\n    `;\nexport const PingQueryDocument = gql`\n    query pingQuery {\n  markets(limit: 1) {\n    id\n  }\n}\n    `;\nexport const PoolsDocument = gql`\n    query pools($where: PoolWhereInput, $order: [PoolOrderByInput!], $offset: Int, $limit: Int) {\n  pools(where: $where, orderBy: $order, offset: $offset, limit: $limit) {\n    ...FullPool\n  }\n}\n    ${FullPoolFragmentDoc}`;\n\nexport type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string) => Promise<T>;\n\n\nconst defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType) => action();\n\nexport function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {\n  return {\n    accountBalances(variables?: AccountBalancesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<AccountBalancesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<AccountBalancesQuery>(AccountBalancesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'accountBalances', 'query');\n    },\n    assets(variables?: AssetsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<AssetsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<AssetsQuery>(AssetsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'assets', 'query');\n    },\n    historicalAccountBalances(variables?: HistoricalAccountBalancesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<HistoricalAccountBalancesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<HistoricalAccountBalancesQuery>(HistoricalAccountBalancesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'historicalAccountBalances', 'query');\n    },\n    historicalAssets(variables?: HistoricalAssetsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<HistoricalAssetsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<HistoricalAssetsQuery>(HistoricalAssetsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'historicalAssets', 'query');\n    },\n    markets(variables?: MarketsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<MarketsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<MarketsQuery>(MarketsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'markets', 'query');\n    },\n    marketStatusCount(variables: MarketStatusCountQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<MarketStatusCountQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<MarketStatusCountQuery>(MarketStatusCountDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'marketStatusCount', 'query');\n    },\n    pingQuery(variables?: PingQueryQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<PingQueryQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<PingQueryQuery>(PingQueryDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'pingQuery', 'query');\n    },\n    pools(variables?: PoolsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<PoolsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<PoolsQuery>(PoolsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'pools', 'query');\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;"],"names":[],"mappings":"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"}